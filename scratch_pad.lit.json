{
    "type": "root",
    "children": [
        {
            "type": "section",
            "data": {
                "id": "-scratch-Ô∏è-pad-",
                "hName": "section",
                "hProperties": {
                    "name": "-scratch-Ô∏è-pad-"
                }
            },
            "position": {
                "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                },
                "end": {
                    "line": 200,
                    "column": 1,
                    "offset": 4643
                }
            },
            "children": [
                {
                    "type": "cell",
                    "position": {
                        "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                        },
                        "end": {
                            "line": 200,
                            "column": 1,
                            "offset": 4643
                        }
                    },
                    "data": {
                        "hName": "cell",
                        "hProperties": {
                            "class": "cell"
                        }
                    },
                    "children": [
                        {
                            "type": "heading",
                            "depth": 1,
                            "children": [
                                {
                                    "type": "text",
                                    "value": "üî• Scratch ‚ö†Ô∏è Pad üî¨",
                                    "position": {
                                        "start": {
                                            "line": 1,
                                            "column": 3,
                                            "offset": 2
                                        },
                                        "end": {
                                            "line": 1,
                                            "column": 23,
                                            "offset": 22
                                        }
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                },
                                "end": {
                                    "line": 200,
                                    "column": 1,
                                    "offset": 4643
                                }
                            },
                            "data": {
                                "hProperties": {
                                    "id": "-scratch-Ô∏è-pad-"
                                },
                                "id": "-scratch-Ô∏è-pad-"
                            }
                        },
                        {
                            "type": "blockquote",
                            "children": [
                                {
                                    "type": "paragraph",
                                    "children": [
                                        {
                                            "type": "text",
                                            "value": "Scratch pad to view ",
                                            "position": {
                                                "start": {
                                                    "line": 3,
                                                    "column": 3,
                                                    "offset": 26
                                                },
                                                "end": {
                                                    "line": 3,
                                                    "column": 23,
                                                    "offset": 46
                                                }
                                            }
                                        },
                                        {
                                            "type": "strong",
                                            "children": [
                                                {
                                                    "type": "text",
                                                    "value": "Markdown",
                                                    "position": {
                                                        "start": {
                                                            "line": 3,
                                                            "column": 25,
                                                            "offset": 48
                                                        },
                                                        "end": {
                                                            "line": 3,
                                                            "column": 33,
                                                            "offset": 56
                                                        }
                                                    }
                                                }
                                            ],
                                            "position": {
                                                "start": {
                                                    "line": 3,
                                                    "column": 23,
                                                    "offset": 46
                                                },
                                                "end": {
                                                    "line": 3,
                                                    "column": 35,
                                                    "offset": 58
                                                }
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": " output and ",
                                            "position": {
                                                "start": {
                                                    "line": 3,
                                                    "column": 35,
                                                    "offset": 58
                                                },
                                                "end": {
                                                    "line": 3,
                                                    "column": 47,
                                                    "offset": 70
                                                }
                                            }
                                        },
                                        {
                                            "type": "emphasis",
                                            "children": [
                                                {
                                                    "type": "text",
                                                    "value": "emergent",
                                                    "position": {
                                                        "start": {
                                                            "line": 3,
                                                            "column": 48,
                                                            "offset": 71
                                                        },
                                                        "end": {
                                                            "line": 3,
                                                            "column": 56,
                                                            "offset": 79
                                                        }
                                                    }
                                                }
                                            ],
                                            "position": {
                                                "start": {
                                                    "line": 3,
                                                    "column": 47,
                                                    "offset": 70
                                                },
                                                "end": {
                                                    "line": 3,
                                                    "column": 57,
                                                    "offset": 80
                                                }
                                            }
                                        },
                                        {
                                            "type": "text",
                                            "value": " behaviour...",
                                            "position": {
                                                "start": {
                                                    "line": 3,
                                                    "column": 57,
                                                    "offset": 80
                                                },
                                                "end": {
                                                    "line": 3,
                                                    "column": 70,
                                                    "offset": 93
                                                }
                                            }
                                        }
                                    ],
                                    "position": {
                                        "start": {
                                            "line": 3,
                                            "column": 3,
                                            "offset": 26
                                        },
                                        "end": {
                                            "line": 3,
                                            "column": 70,
                                            "offset": 93
                                        }
                                    }
                                }
                            ],
                            "position": {
                                "start": {
                                    "line": 3,
                                    "column": 1,
                                    "offset": 24
                                },
                                "end": {
                                    "line": 3,
                                    "column": 70,
                                    "offset": 93
                                }
                            }
                        },
                        {
                            "type": "html",
                            "value": "<!--- data\ntitle: Statch Pad\n--->\n\n## Table of Contents\n\n## ‚úçÔ∏è Inline Markdown\n\n### Basics\n\n`.lit` is a plain text document format, really it's just **Markdown**. But with *Sections*, *Cells*, <p>interactive</p> `code` blocks and _meta_ programming over its own `AST`.\n\n### üîó Links\n\n[Standard](#) links, [[wiki]] links, inline [references] and footnotes[^1]\n\n\n#### WikiLinks\n\n- [x] with slashes: [[utils/fs]] \n- [ ] with fragments: [[utils/uri#fragments]]\n  - [ ] only fragments like [[#Wikilinks]]\n  - [ ] Hoist fragment \n\n[references]: https://example.com \"Example\"\n[^1]: footnote \n    With multi line `content`\n\n## üß≠ Headings (h2)\n### Sub headings (h3)\n#### little (h4) {#custom-id}\n##### tiny (h5)\n###### smallest (h6)\n####### tooooo small (h6+)\n\n## ‚òëÔ∏è Lists\n\n### Basics\n\n* List\n  - styles\n  - [ ] not done\n    - [x] done\n  1. Foo\n     1. Bar\n     1. Qux\n\n### Lists with nested blocks\n\n- # List Item heading\n  \n  With additional \n\n  > block elements\n\n      Content...\n\n\n## ‚ú≥Ô∏è Code\n\n### Basic code blocks\n\nLines indented with 4 spaces, are plain code blocks without any syntax highlighting or additional behaviour.\n\n    A plain code block\n\n### Fenced code blocks\n\nBlocks preceded and suffixed with 3 backticks ie \"```\" with additional metadata being placed after the back ticks on the opening line.\n\n    ```lang filename.ext #tag !directive attr=val\n\n\n    \n    ```\n\n\n\n```js dummy/example.js #example #test !exec !above repl=node\n// A named and configured fenced code block which is to be executed in a yet to be implemented nodejs repl.\n```\n\n```uri http://example.com\n```\n\n#### Tags and directives\n\nReserved directives include: `!inline` `!above` or for example `!onload` ...\n\n```html !inline\n<details>\n<summary>\n  inline <em>HTML</em>\n</summary>\n<p>An example details and summary tag</p>\n</details>\n```\n\n#### Attributes\n\nFor now the only reserved attributes are `viewer` see [Viewers](#viewers) and `repl` used to define what remote REPL to execute code against.\n\n```txt repl=echo\npipe to echo binary\n```\n\nPotentially to include `updatedAt` and or a reference to source cell for outputs in order to maintain a connection with code that produced the output.\n\n#### Outputs and Transcludes\n\nMetadata which references a source `lang < ./file.ext` will be transcluded into the view.\n\n```lit < dummy/üî•.lit\nwill be replaced by above source\n```\n\nMetadata which defines a filename `lang file.ext` will be mirrored to the filesystem.\n\n```svg dummy/example.svg !inline\n<?xml version=\"1.0\" standalone=\"no\"?>\n\n<svg width=\"120\" height=\"120\" version=\"1.1\"\n  xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n      <radialGradient id=\"Gradient\"\n            cx=\"0.5\" cy=\"0.5\" r=\"0.5\" fx=\"0.25\" fy=\"0.25\">\n        <stop offset=\"0%\" stop-color=\"red\"/>\n        <stop offset=\"100%\" stop-color=\"blue\"/>\n      </radialGradient>\n  </defs>\n\n  <rect x=\"10\" y=\"10\" rx=\"15\" ry=\"15\" width=\"100\" height=\"100\"\n        fill=\"url(#Gradient)\" stroke=\"black\" stroke-width=\"2\"/>\n\n  <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"transparent\" stroke=\"white\" stroke-width=\"2\"/>\n  <circle cx=\"35\" cy=\"35\" r=\"2\" fill=\"white\" stroke=\"white\"/>\n  <circle cx=\"60\" cy=\"60\" r=\"2\" fill=\"white\" stroke=\"white\"/>\n  <text x=\"38\" y=\"40\" fill=\"white\" font-family=\"sans-serif\" font-size=\"10pt\">(fx,fy)</text>\n  <text x=\"63\" y=\"63\" fill=\"white\" font-family=\"sans-serif\" font-size=\"10pt\">(cx,cy)</text>\n\n</svg>\n```\n\nUsing filename and transclude presents problems as to which one you're viewing and which one you edit, see also caching (both at the remote and local fs)\n\n```txt dummy/plain.txt < dummy/plain.txt\nB\nC\n```\n\nMetadata which defines an output `lang > file.ext` will output to the filesystem and the document when executed[^2].\n\n[^2]: `REPL` still to be reimplemented.\n\n```csv > dummy/data.csv\nid,name,amount\n17494,Alice,9001\n245,Bob,2000\n```\n```> csv dummy/data.csv\nid,name,amount\n17494,Alice,9001\n245,Bob,2000\n```\n\n#### Viewers\n\nWhen a cell is an Output or has the directive `!inline` and a lang, file-extension, or the explicit `viewer=xxx` attribute, for which a Viewer exists then the source will be shown using the viewer and plain text source only visible on edit.\n\nSee [styles](meta/styling_and_themes.lit#viewers)\n\n```>json\n{\"json\": \"viewer tbd\"}\n```\n\n```>svg\n<svg width=\"100\" height=\"100\">\n  <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" stroke-width=\"4\" fill=\"yellow\" />\n</svg>\n```\n\n```>uri\nhttps://example.com\n```\n\nSuggested or planned viewers\n\n- [ ] JSON\n- [x] HTML (inclined)\n- [x] SVG (basically the above)\n- [ ] CSV: Table\n- [ ] URI: Iframe\n- [ ] CSS: Style\n- [ ] JS: Script\n- [ ] UML\n",
                            "position": {
                                "start": {
                                    "line": 5,
                                    "column": 1,
                                    "offset": 95
                                },
                                "end": {
                                    "line": 200,
                                    "column": 1,
                                    "offset": 4643
                                }
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "position": {
        "start": {
            "line": 1,
            "column": 1,
            "offset": 0
        },
        "end": {
            "line": 200,
            "column": 1,
            "offset": 4643
        }
    }
}