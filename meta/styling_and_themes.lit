# ðŸŽ¨ Styling & Themes

You can add custom styles using the `css` viewer, see [[Viewers]] but you can also add a `theme` property to a documents frontmatter like so:

<!-- data
title: ðŸŽ¨ Styling & Themes
theme: //cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.0.0/build/styles/monokai.min.css
-->

    <!-- data
    title: ðŸŽ¨ Styling & Themes
    theme: https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/solarized-light.min.css
    -->

```js !plugin type=viewer of=codetheme !collapse
const themes = [
  "",
  "a11y-dark",
  "a11y-light",
  "agate",
  "an-old-hope",
  "androidstudio",
  "arduino-light",
  "arta",
  "ascetic",
  "atom-one-dark",
  "atom-one-dark-reasonable",
  "atom-one-light",
  "brown-paper",
  "codepen-embed",
  "color-brewer",
  "dark",
  "default",
  "devibeans",
  "docco",
  "far",
  "foundation",
  "github",
  "github-dark",
  "github-dark-dimmed",
  "gml",
  "googlecode",
  "gradient-dark",
  "gradient-light",
  "grayscale",
  "hybrid",
  "idea",
  "ir-black",
  "isbl-editor-dark",
  "isbl-editor-light",
  "kimbie-dark",
  "kimbie-light",
  "lightfair",
  "lioshi",
  "magula",
  "mono-blue",
  "monokai",
  "monokai-sublime",
  "night-owl",
  "nnfx-dark",
  "nnfx-light",
  "nord",
  "obsidian",
  "paraiso-dark",
  "paraiso-light",
  "pojoaque",
  "purebasic",
  "qtcreator-dark",
  "qtcreator-light",
  "rainbow",
  "routeros",
  "school-book",
  "shades-of-purple",
  "srcery",
  "stackoverflow-dark",
  "stackoverflow-light",
  "sunburst",
  "tomorrow-night-blue",
  "tomorrow-night-bright",
  "vs",
  "vs2015",
  "xcode",
  "xt256",
];

const endpoint = (theme) =>
  `//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.0.0/build/styles/${theme}.min.css`;

export const viewer = ({ node, React }) => {
  const { useState } = React;
  const [theme, setTheme] = useState(node.data.value);
  const change = (ev) => setTheme(ev.target.value.trim());
  return (
    <div>
      <select value={theme} onChange={change}>
        {themes.map((t) => {
          return (
            <option
              selected={theme === t ? "selected" : false}
              key={t}
              value={t}
            >
              {t || "Select Theme"}
            </option>
          );
        })}
      </select>
      {theme && <link rel="stylesheet" href={endpoint(theme)} />}
      {theme && <div>{"Theme url: " + endpoint(theme)}</div>}
    </div>
  );
};

```

```>codetheme
monokai
```
```css !below viewer=style
body {
  --bg: #000000;
  --text-color: lightgrey;
  --text-primary-color: orange;
  --text-secondary-color: #333333;
  --divider-subtle: #333333;
}
```


```styl !collapse < ../client/style.styl

```

```styl !collapse < ../client/styles/cell.styl

```

```styl < ../client/styles/codecell.styl
```

```styl !collapse < ../client/styles/cellmenu.styl

```
```styl !collapse < ../client/styles/header.styl

```

### Viewers

[see examples](../scratch_pad.lit#viewers)

```styl !collapse < ../client/styles/viewers.styl

```
