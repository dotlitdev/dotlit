# execute_code_cells

 ## Bugs 🐜 and To do ✅

- [ ] executed cell gets replaced with its output
- [ ] more robust outputs

### Test runs

```js
const url = "https://example.com"
return fetch(url)

```

```js > prose
console.log("A result: " +  42/13)
return 42
```
```txt updated=1618859757698
A result: 3.230769230769231
42
```

```js > json
return { foo: 'bar'}
```
```>json updated=1618921343692
{ foo: 'bar' }
```

## Other

























```js > text !collapse
return Object.keys(ast)
```

```js > text !collapse
return lit.location
```
```>text !collapse updated=1618921609909
{ src: 'execute_code_cells.lit',
  root: '/',
  base: 'https://dotlit.org/',
  query: { file: 'execute_code_cells.lit' } }
```
```>text !collapse updated=1618921607703
{ src: 'execute_code_cells.lit',
  root: '/',
  base: 'https://dotlit.org/',
  query: { file: 'execute_code_cells.lit' } }
```
```>text !collapse updated=1618921598320
{ src: 'execute_code_cells.lit',
  root: '/',
  base: 'https://dotlit.org/',
  query: { file: 'execute_code_cells.lit' } }
```





