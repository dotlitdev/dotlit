# Timings




```js !collapse !plugin type=viewer of=vega 
import { VegaLite } from "https://cdn.skypack.dev/react-vega";
export const viewer = ({ node, React }) => {
  let spec, error;
  try {
    spec = JSON.parse(node.data.value);
  } catch (err) {
    error = error.message;
  }
  return error || <VegaLite spec={spec} renderer="svg" />;
};

```



```js !collapse > vega #sw-connected #gh-connected
const raw = localStorage.getItem("litTimings");
const json = obj => JSON.stringify(obj,null,2)

const events = {};
const logs = raw
  .split("\n")
  .map((l) => {
    try {
      const data = JSON.parse(l);
      events[data.marker] = events[data.marker] || [];
      events[data.marker].push(data.took);
    } catch (err) {}
  })
  .filter((x) => x);

const avg = (arr) => arr.reduce((a, x) => a + x, 0) / arr.length;

const aggregates = {};
Object.keys(events).map((event) => {
  const ev = events[event];
  aggregates[event] = {
    min: Math.min(...ev),
    max: Math.max(...ev),
    mean: avg(ev),
    n: ev.length,
  };
});
// const values = Object.entries(aggregates).map( ([k,v])=>({id:k, ...v}))
const values = Object.entries(events).map( ([k,v])=>({id:k, value: v}))
const spec = {
  // $schema: 'https://vega.github.io/schema/vega-lite/v5.json',
  description: "A simple bar chart with embedded data.",
  data: {
    values
  },
  mark: "bar",
  encoding: {
    x: { field: "id", type: "ordinal" },
    y: { field: "value", type: "quantitative" },
  },
}

return json(spec)
return aggregates;
return events;
return logs;
return raw;

```
```>vega #sw-connected #gh-connected attached=true updated=1624711872143
{
  "description": "A simple bar chart with embedded data.",
  "data": {
    "values": [
      {
        "id": "importsComplete",
        "value": [
          102,
          102,
          39,
          107,
          106,
          44,
          41,
          105,
          125,
          35,
          36,
          54,
          110,
          36,
          37,
          36,
          35,
          46,
          36,
          247,
          77,
          78,
          79,
          78,
          77,
          79,
          258,
          255,
          87,
          103,
          35,
          37,
          34,
          105,
          113,
          42,
          47,
          35,
          107,
          875,
          103,
          38,
          36,
          55,
          36,
          40,
          105,
          39,
          41,
          108,
          40,
          104,
          113,
          102,
          38,
          36
        ]
      },
      {
        "id": "fsSetup",
        "value": [
          103,
          102,
          39,
          108,
          107,
          45,
          41,
          106,
          126,
          35,
          36,
          54,
          110,
          36,
          37,
          36,
          35,
          46,
          36,
          248,
          78,
          79,
          80,
          79,
          78,
          80,
          261,
          257,
          88,
          103,
          35,
          37,
          35,
          106,
          114,
          42,
          48,
          36,
          108,
          882,
          104,
          38,
          36,
          56,
          36,
          40,
          106,
          39,
          41,
          109,
          41,
          105,
          114,
          103,
          38,
          36
        ]
      },
      {
        "id": "litObj",
        "value": [
          103,
          102,
          39,
          108,
          107,
          45,
          41,
          106,
          126,
          35,
          36,
          55,
          110,
          37,
          37,
          36,
          35,
          46,
          36,
          249,
          78,
          79,
          80,
          79,
          78,
          80,
          261,
          257,
          88,
          104,
          35,
          37,
          35,
          106,
          114,
          42,
          48,
          36,
          108,
          882,
          104,
          38,
          36,
          56,
          37,
          40,
          106,
          40,
          41,
          109,
          41,
          105,
          114,
          103,
          38,
          36
        ]
      },
      {
        "id": "initStart",
        "value": [
          104,
          103,
          39,
          108,
          108,
          45,
          41,
          107,
          127,
          36,
          36,
          55,
          111,
          37,
          37,
          36,
          35,
          46,
          36,
          250,
          78,
          79,
          80,
          79,
          78,
          80,
          262,
          259,
          88,
          104,
          35,
          37,
          35,
          107,
          115,
          42,
          48,
          36,
          108,
          888,
          105,
          38,
          36,
          56,
          37,
          40,
          107,
          40,
          41,
          109,
          41,
          105,
          115,
          103,
          38,
          36
        ]
      },
      {
        "id": "readFile",
        "value": [
          1010,
          1255,
          1020,
          1051,
          1592,
          1139,
          1906,
          1803,
          1234,
          1503,
          1590,
          1217,
          1470,
          876,
          1116,
          1429,
          623,
          1539,
          1178,
          1090,
          1137,
          1308,
          1296,
          1173,
          2340,
          1343,
          1247,
          1489,
          1190,
          1483,
          1462,
          876,
          605,
          629,
          3341,
          911,
          1880,
          1612,
          1210,
          1234,
          1392,
          1021,
          1151,
          1331,
          1358,
          1074,
          1009,
          1442,
          918,
          596,
          637,
          498
        ]
      },
      {
        "id": "manifestLoaded",
        "value": [
          1029,
          1271,
          1028,
          1066,
          1759,
          1152,
          2139,
          1828,
          1245,
          1528,
          1817,
          1226,
          1483,
          887,
          1140,
          1460,
          630,
          1770,
          1188,
          1103,
          1148,
          1318,
          1304,
          1185,
          2374,
          1262,
          1694,
          1494,
          1466,
          1058,
          614,
          633,
          3345,
          1098,
          2143,
          1834,
          1223,
          1246,
          1401,
          1208,
          1162,
          1374,
          1085,
          1467,
          1108,
          666,
          643,
          502
        ]
      },
      {
        "id": "processedFile",
        "value": [
          3480,
          3691,
          3593,
          3706,
          5151,
          3182,
          6053,
          3960,
          4888,
          4873,
          4146,
          3258,
          3540,
          5137,
          3399,
          3950,
          3980,
          3188,
          3100,
          3219,
          3410,
          3416,
          3283,
          5795,
          3892,
          5467,
          5046,
          4725,
          3156,
          1987,
          1254,
          8840,
          3169,
          6570,
          5661,
          3299,
          3256,
          3558,
          3441,
          4522,
          5346,
          4424,
          3784,
          4109,
          2289,
          1431,
          4843
        ]
      },
      {
        "id": "rendered",
        "value": [
          3515,
          3727,
          3621,
          3744,
          5321,
          3200,
          6224,
          4148,
          4937,
          5061,
          4169,
          3285,
          3558,
          5363,
          3421,
          4123,
          4046,
          3228,
          3126,
          3236,
          3433,
          3436,
          3326,
          6198,
          4293,
          5640,
          5081,
          4939,
          3329,
          2165,
          1440,
          8870,
          3341,
          7488,
          5851,
          3324,
          3284,
          3581,
          3595,
          4687,
          5534,
          4474,
          3982,
          4295,
          2468,
          1584,
          4872
        ]
      }
    ]
  },
  "mark": "bar",
  "encoding": {
    "x": {
      "field": "id",
      "type": "ordinal"
    },
    "y": {
      "field": "value",
      "type": "quantitative"
    }
  }
}
```
```>vega #sw-connected #gh-connected updated=1624461979581
{
  "description": "A simple bar chart with embedded data.",
  "data": {
    "values": [
      {
        "id": "importsComplete",
        "min": 35,
        "max": 171,
        "mean": 82.55172413793103,
        "n": 29
      },
      {
        "id": "fsSetup",
        "min": 35,
        "max": 172,
        "mean": 83.37931034482759,
        "n": 29
      },
      {
        "id": "litObj",
        "min": 35,
        "max": 172,
        "mean": 83.41379310344827,
        "n": 29
      },
      {
        "id": "initStart",
        "min": 35,
        "max": 173,
        "mean": 83.82758620689656,
        "n": 29
      },
      {
        "id": "readFile",
        "min": 603,
        "max": 2339,
        "mean": 1487.24,
        "n": 25
      },
      {
        "id": "manifestLoaded",
        "min": 611,
        "max": 2723,
        "mean": 1627.1739130434783,
        "n": 23
      },
      {
        "id": "processedFile",
        "min": 3250,
        "max": 7818,
        "mean": 5322.478260869565,
        "n": 23
      },
      {
        "id": "rendered",
        "min": 3278,
        "max": 7847,
        "mean": 5534.521739130435,
        "n": 23
      }
    ]
  },
  "mark": "bar",
  "encoding": {
    "x": {
      "field": "id",
      "type": "ordinal"
    },
    "y": {
      "field": "mean",
      "type": "quantitative"
    }
  }
}
```
```>vega #sw-connected #gh-connected updated=1623929916171
{
  "description": "A simple bar chart with embedded data.",
  "data": {
    "values": [
      {
        "id": "importsComplete",
        "min": 34,
        "max": 254,
        "mean": 73.28888888888889,
        "n": 135
      },
      {
        "id": "fsSetup",
        "min": 34,
        "max": 258,
        "mean": 73.92592592592592,
        "n": 135
      },
      {
        "id": "litObj",
        "min": 34,
        "max": 258,
        "mean": 74.00740740740741,
        "n": 135
      },
      {
        "id": "initStart",
        "min": 34,
        "max": 259,
        "mean": 74.36296296296297,
        "n": 135
      },
      {
        "id": "readFile",
        "min": 433,
        "max": 7691,
        "mean": 1391.264,
        "n": 125
      },
      {
        "id": "settingsFetched",
        "min": 435,
        "max": 7715,
        "mean": 1606.446153846154,
        "n": 65
      },
      {
        "id": "settingsLoaded",
        "min": 610,
        "max": 8998,
        "mean": 2904.6774193548385,
        "n": 62
      },
      {
        "id": "manifestLoaded",
        "min": 621,
        "max": 9011,
        "mean": 2366.153153153153,
        "n": 111
      },
      {
        "id": "processedFile",
        "min": 693,
        "max": 51116,
        "mean": 4615.3644859813085,
        "n": 107
      },
      {
        "id": "rendered",
        "min": 718,
        "max": 51276,
        "mean": 4801.411214953271,
        "n": 107
      }
    ]
  },
  "mark": "bar",
  "encoding": {
    "x": {
      "field": "id",
      "type": "ordinal"
    },
    "y": {
      "field": "mean",
      "type": "quantitative"
    }
  }
}
```
```>text #sw-connected #gh-connected updated=1623688027266
{ importsComplete: { min: 31, max: 200, mean: 73.72631578947369, n: 95 },
  fsSetup: { min: 31, max: 202, mean: 74.51578947368421, n: 95 },
  litObj: { min: 31, max: 202, mean: 74.56842105263158, n: 95 },
  initStart: { min: 31, max: 203, mean: 74.93684210526315, n: 95 },
  readFile: { min: 300, max: 51363, mean: 1548.6463414634147, n: 82 },
  settingsLoaded: { min: 1100, max: 70246, mean: 6993.295081967213, n: 61 },
  manifestLoaded: { min: 2428, max: 70436, mean: 7705.462962962963, n: 54 },
  processedFile: { min: 3033, max: 72866, mean: 8876, n: 53 },
  rendered: { min: 3171, max: 73111, mean: 9079.471698113208, n: 53 },
  settingsFetched: { min: 1156, max: 10758, mean: 3542.625, n: 24 } }
```




## Runs

```>text #gh-connected #no-sw
{ importsComplete: { min: 33, max: 212, mean: 80.08333333333333, n: 36 },
  fsSetup: { min: 33, max: 213, mean: 80.61111111111111, n: 36 },
  litObj: { min: 33, max: 213, mean: 80.66666666666667, n: 36 },
  initStart: { min: 33, max: 215, mean: 81.05555555555556, n: 36 },
  readFile: { min: 43, max: 69015, mean: 3341.6153846153848, n: 26 },
  settingsLoaded: { min: 222, max: 73567, mean: 5477.653846153846, n: 26 },
  manifestLoaded: { min: 1368, max: 73575, mean: 6254.181818181818, n: 22 },
  processedFile: { min: 1373, max: 73583, mean: 6429.409090909091, n: 22 },
  rendered: { min: 1536, max: 73941, mean: 6668.590909090909, n: 22 } }
```

So far the majority of time before complete is spent fetching files from the remote, 3s to read file, doubled by config, +1s for manifest. Of ~30 samples, with service worker disabled and GitHub connected.
```>text #no-gh #no-sw updated=1623453687467
{ importsComplete: { min: 73, max: 197, mean: 108.9090909090909, n: 11 },
  fsSetup: { min: 73, max: 198, mean: 109.81818181818181, n: 11 },
  litObj: { min: 73, max: 199, mean: 110, n: 11 },
  initStart: { min: 74, max: 200, mean: 110.36363636363636, n: 11 },
  readFile: { min: 645, max: 1024, mean: 833.9090909090909, n: 11 },
  settingsLoaded: { min: 7519, max: 7895, mean: 7688.909090909091, n: 11 },
  manifestLoaded: { min: 7537, max: 7920, mean: 7709.363636363636, n: 11 },
  processedFile: { min: 7543, max: 10109, mean: 7922.363636363636, n: 11 },
  rendered: { min: 7831, max: 10452, mean: 8227.272727272728, n: 11 } }
```
```>text #sw-connected #gh-connected updated=1623454494037
{ importsComplete: { min: 71, max: 196, mean: 86.66666666666667, n: 15 },
  fsSetup: { min: 72, max: 197, mean: 87.33333333333333, n: 15 },
  litObj: { min: 72, max: 197, mean: 87.4, n: 15 },
  initStart: { min: 72, max: 198, mean: 87.53333333333333, n: 15 },
  readFile: { min: 340, max: 853, mean: 522.7333333333333, n: 15 },
  settingsLoaded: { min: 2784, max: 5956, mean: 3275.3333333333335, n: 15 },
  manifestLoaded: { min: 2910, max: 6193, mean: 3419.4666666666667, n: 15 },
  processedFile: { min: 2946, max: 6208, mean: 4012.9285714285716, n: 14 },
  rendered: { min: 3035, max: 6409, mean: 4171, n: 14 } }
```
```>text #sw-connected #gh-connected #offline updated=1623454645423
{ importsComplete: { min: 72, max: 199, mean: 113.3, n: 10 },
  fsSetup: { min: 72, max: 201, mean: 114, n: 10 },
  litObj: { min: 72, max: 201, mean: 114.1, n: 10 },
  initStart: { min: 73, max: 202, mean: 114.8, n: 10 },
  readFile: { min: 120, max: 523, mean: 379.1, n: 10 },
  settingsLoaded: { min: 1470, max: 1880, mean: 1782.3, n: 10 },
  manifestLoaded: { min: 1917, max: 2319, mean: 2189.9, n: 10 },
  processedFile: { min: 2084, max: 4027, mean: 2793.4, n: 10 },
  rendered: { min: 2123, max: 9410, mean: 3966.4, n: 10 } }
```