# Web Workers

## Table of Contents 

## References 
[Using Web Workers on MDN](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers)

## Support



```js
return `Worker supported: ${!!window.Worker}`
```
```>txt attached=true updated=1619650950719
Worker supported: true
```

## Implementation
```>js worker.js #implementation
importScripts('../web.bundle.js')
postMessage("dotlit: " + typeof dotlit)
console.log("anyone here?")
```
```>js worker2.js #implementation
postMessage("hi")
console.log("anyone here?")
```
Check if web server has up to date content yet? This delay is really why we need a service worker in the first place.

```js
return (async fn => {
  const resp = await fetch('./worker.js')
  return resp.status + "\n" + (await resp.text())
})()
```
```>txt attached=true updated=1619735935623
200
importScripts('../web.bundle.js')
postMessage("dotlit: " + typeof dotlit)
console.log("anyone here?")
```
### Testing

~Current REPL results in script execution from cross-origin? Due to data:uri~ was resolving the raw event from postMessage not `ev.data` which is necessary.

```js
return new Promise((resolve,reject) => {
  let myWorker;
  try {
    myWorker = new Worker('worker.js')
    myWorker.onmessage = (ev) => resolve(ev.data)
    myWorker.onerror = (err) => {
      resolve({msg: "worker.onerror: " + err.message + " (" + err.filename + ":" + err.lineno + ")", err, err},)
    }
  } catch(err) {
    resolve({msg: "Caught err", err})
  }
  
})
```
```>txt attached=true updated=1619767297540
{ msg: 'worker.onerror: ReferenceError: Can\'t find variable: document (https://dotlit.org/web.bundle.js:68421)',
  err: { isTrusted: [Getter] } }
```

```js
return (async fn =>{
   const url = "https://dotlit.org/web.bundle.js"
   const lineno = 68421
   const spread = 100
   const resp = await fetch(url)
   console.log(resp.status)
   const val = await resp.text()
   const lines = val.split("\n")
   console.log(lines.length, "lines")

   
   return lines.map((l,i) => {
           if (i ===lineno-1) return ">>>" + l
           else return "" + i + " " + l
           }).slice(lineno - spread, lineno + spread).join("\n")
})()

```
```>txt attached=true updated=1619770099722
200
227913,lines
68381 
68382 "use strict";
68383 __webpack_require__.r(__webpack_exports__);
68384 /* harmony export */ __webpack_require__.d(__webpack_exports__, {
68385 /* harmony export */   "Range": () => (/* reexport safe */ _codemirror_rangeset__WEBPACK_IMPORTED_MODULE_1__.Range),
68386 /* harmony export */   "BidiSpan": () => (/* binding */ BidiSpan),
68387 /* harmony export */   "BlockInfo": () => (/* binding */ BlockInfo),
68388 /* harmony export */   "BlockType": () => (/* binding */ BlockType),
68389 /* harmony export */   "Decoration": () => (/* binding */ Decoration),
68390 /* harmony export */   "Direction": () => (/* binding */ Direction),
68391 /* harmony export */   "EditorView": () => (/* binding */ EditorView),
68392 /* harmony export */   "MatchDecorator": () => (/* binding */ MatchDecorator),
68393 /* harmony export */   "PluginField": () => (/* binding */ PluginField),
68394 /* harmony export */   "PluginFieldProvider": () => (/* binding */ PluginFieldProvider),
68395 /* harmony export */   "ViewPlugin": () => (/* binding */ ViewPlugin),
68396 /* harmony export */   "ViewUpdate": () => (/* binding */ ViewUpdate),
68397 /* harmony export */   "WidgetType": () => (/* binding */ WidgetType),
68398 /* harmony export */   "__test": () => (/* binding */ __test),
68399 /* harmony export */   "drawSelection": () => (/* binding */ drawSelection),
68400 /* harmony export */   "highlightActiveLine": () => (/* binding */ highlightActiveLine),
68401 /* harmony export */   "highlightSpecialChars": () => (/* binding */ highlightSpecialChars),
68402 /* harmony export */   "keymap": () => (/* binding */ keymap),
68403 /* harmony export */   "logException": () => (/* binding */ logException),
68404 /* harmony export */   "placeholder": () => (/* binding */ placeholder),
68405 /* harmony export */   "runScopeHandlers": () => (/* binding */ runScopeHandlers)
68406 /* harmony export */ });
68407 /* harmony import */ var _codemirror_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @codemirror/state */ "./node_modules/@codemirror/state/dist/index.js");
68408 /* harmony import */ var _codemirror_text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @codemirror/text */ "./node_modules/@codemirror/text/dist/index.js");
68409 /* harmony import */ var style_mod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-mod */ "./node_modules/style-mod/src/style-mod.js");
68410 /* harmony import */ var _codemirror_rangeset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @codemirror/rangeset */ "./node_modules/@codemirror/rangeset/dist/index.js");
68411 /* harmony import */ var w3c_keyname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! w3c-keyname */ "./node_modules/w3c-keyname/index.es.js");
68412 
68413 
68414 
68415 
68416 
68417 
68418 
68419 let [nav, doc] = typeof navigator != "undefined"
>>>    ? [navigator, document]
68421     : [{ userAgent: "", vendor: "", platform: "" }, { documentElement: { style: {} } }];
68422 const ie_edge = /Edge\/(\d+)/.exec(nav.userAgent);
68423 const ie_upto10 = /MSIE \d/.test(nav.userAgent);
68424 const ie_11up = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(nav.userAgent);
68425 const ie = !!(ie_upto10 || ie_11up || ie_edge);
68426 const gecko = !ie && /gecko\/(\d+)/i.test(nav.userAgent);
68427 const chrome = !ie && /Chrome\/(\d+)/.exec(nav.userAgent);
68428 const webkit = "webkitFontSmoothing" in doc.documentElement.style;
68429 const safari = !ie && /Apple Computer/.test(nav.vendor);
68430 var browser = {
68431     mac: /Mac/.test(nav.platform),
68432     ie,
68433     ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,
68434     gecko,
68435     gecko_version: gecko ? +(/Firefox\/(\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,
68436     chrome: !!chrome,
68437     chrome_version: chrome ? +chrome[1] : 0,
68438     ios: safari && (/Mobile\/\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2),
68439     android: /Android\b/.test(nav.userAgent),
68440     webkit,
68441     safari,
68442     webkit_version: webkit ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
68443     tabSize: doc.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
68444 };
68445 
68446 function getSelection(root) {
68447     return (root.getSelection ? root.getSelection() : document.getSelection());
68448 }
68449 // Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523
68450 // (isCollapsed inappropriately returns true in shadow dom)
68451 function selectionCollapsed(domSel) {
68452     let collapsed = domSel.isCollapsed;
68453     if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)
68454         collapsed = false;
68455     return collapsed;
68456 }
68457 function hasSelection(dom, selection) {
68458     if (!selection.anchorNode)
68459         return false;
68460     try {
```



