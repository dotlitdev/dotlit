# Importing JS Modules

## Table of Contents 

## References

- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules
- https://github.com/WICG/import-maps
- https://github.com/tc39/proposal-import-meta
- https://v8.dev/features/modules

```js #destructuring
const x = {
  default: "a",
  b: "42",
  c: () => {},
};
const { default: y, b: z } = x;
return { y, z };

```
```>txt attached=true updated=1621550583088
{ y: 'a', z: '42' }
```

## Skypack





```js #skypack
const skypack = (pkg) => import(`https://cdn.skypack.dev/${pkg}`);
return skypack("canvas-confetti");

```
```>txt attached=true updated=1621634750440
{ create: [Function: confettiCannon],
  default: { [Function: fire] reset: [Function], create: [Function: confettiCannon] } }
```
```js #skypack
const skypack = (pkg) => import(`https://cdn.skypack.dev/${pkg}`);

return skypack("canvas-confetti").then((pkg) => {
  const { default: fire } = pkg;
  return fire();
});

```
```>txt attached=true updated=1621551049304
undefined
```
```js #skypack
const skypack = (pkg) => import(`https://cdn.skypack.dev/${pkg}`);

// I like async await
return (async (fn) => {
  const { default: fire } = await skypack("canvas-confetti");
  return fire();
})();

```
```>txt attached=true updated=1621551042809
undefined
```

## Unpkg



```js #unpkg
const unpkg = (pkg) => import(`https://unpkg.com/${pkg}?module`);
return unpkg("canvas-confetti");

```
```>txt attached=true updated=1621550434223
{ create: [Function: confettiCannon],
  default: { [Function: fire] reset: [Function], create: [Function: confettiCannon] } }
```
```js #unpkg
const unpkg = (pkg) => import(`https://unpkg.com/${pkg}?module`);
return unpkg("canvas-confetti").then((pkg) => {
  return pkg.default();
});

```
```>txt attached=true updated=1621583914027
undefined
```



## Native ES Module REPL
```>js ../plugins/repls/module.js !plugin type=repl of=module !collapse 
export const repl = async (src, meta) => {
  const { btoa } = lit.utils.safeEncoders;
  const { transform } = lit.utils;
  const filename = (meta && meta.filename) || "untitled.js";
  let babel;
  try {
    babel = transform(filename, src);

    const s = `/*${Date.now()}*/` + babel.code;
    const console = "fake me";
    // const url = `data:text/javascript;base64,${btoa(s)}`
    const url = URL.createObjectURL(new Blob([s], { type: "text/javascript" }));
    const m = await import(url);
    if (typeof m.default === "function") {
      const res = await m.default.call({ console });
      return lit.utils.inspect(res);
    } else return lit.utils.inspect(m);
  } catch (err) {
    return err.message;
  }
};

```
```js repl=module
import fire from "https://cdn.skypack.dev/canvas-confetti";

export const success = "yes";
export const issue =
  "module caching means it only executes once, had to add a cachebusting comment.";

export default () => import.meta
export const cons = typeof console !== "undefined" ? console : null;
fire();

```
```>txt attached=true updated=1621636574738
{ url: 'blob:https://dotlit.org/a73a557f-870a-4c7e-a8de-9839024987b8' }
```


```js repl=module
import foo from '/notfound.js'
export default foo
```
```>txt attached=true updated=1621599982721
Module name, '/notfound.js' does not resolve to a valid URL.
```
```>txt  updated=1621596754673
Module name, '/notfound' does not resolve to a valid URL.
```
```>txt  updated=1621596671506
Module specifier, 'notfound' does not start with "/", "./", or "../". Referenced from data:text/javascript;base64,LyoxNjIxNTk2NjcxNDkzKi9pbXBvcnQgZm9vIGZyb20gJ25vdGZvdW5kJzsKZXhwb3J0IGRlZmF1bHQgZm9vOw==
```
```js repl=module
export default async function (...args) {
  return { args, console, ctx: this };
};

```
```>txt attached=true updated=1621599908036
{ args: [],
  console: 
   { debug: [Function],
     error: [Function],
     log: [Function],
     info: [Function],
     warn: [Function],
     clear: [Function],
     dir: [Function],
     dirxml: [Function: dirxml],
     table: [Function],
     trace: [Function: trace],
     assert: [Function],
     count: [Function],
     countReset: [Function],
     profile: [Function: profile],
     profileEnd: [Function: profileEnd],
     time: [Function],
     timeLog: [Function],
     timeEnd: [Function],
     timeStamp: [Function: timeStamp],
     takeHeapSnapshot: [Function: takeHeapSnapshot],
     group: [Function],
     groupCollapsed: [Function],
     groupEnd: [Function],
     record: [Function: record],
     recordEnd: [Function: recordEnd],
     screenshot: [Function: screenshot] },
  ctx: { console: 'fake me' } }
```

```js repl=module
export default fn => console.screenshot(document.body)
```
```>txt attached=true updated=1621600683102
undefined
```

```js repl=module
const { inspect } = lit.utils;
const { wait } = lit.utils.fns;

export default async (fn) => {
  // https://github.com/whatwg/console/issues/120
  console.record();
  await wait(1000);
  console.log("tick", new Date());
  await wait(1000);
  console.log("tock", new Date());
  return console.recordEnd.toString();
};

```
```>txt attached=true updated=1621600089887
'function recordEnd() {\n    [native code]\n}'
```

## Local modules

This assumes you have the *experimental* service worker ([[testing/ServiceWorker]]) (version 0.2.1) enabled to vend files in the local filesystem via Web fetch API.

```>js custom-module.mjs
export default (fn) => "Great Success!";

```

```js repl=module
import foo from '/testing/custom-module.mjs'
export default foo()
```
```>txt attached=true updated=1621640046284
Module name, '/testing/custom-module.mjs' does not resolve to a valid URL.
```

```js
return fetch('/testing/custom-module.mjs').then(res => res.headers.get('Content-Type'))
```
```>txt attached=true updated=1621681132098
application/javascript; charset=utf-8
```


- [ ] Seems like `0.2.2` is *Still* not setting headers correctly, was expecting `text/javascript`.
```js
return fetch('/testing/custom-module.mjs--sw').then(res => res.text())
```
```>txt attached=true updated=1621682434314
{
  "version": "0.2.6",
  "dotlit": "object",
  "root": "/",
  "enableCache": false,
  "filepath": "/testing/custom-module.mjs",
  "stat": {
    "type": "file",
    "mode": 438,
    "size": 41,
    "ino": 198,
    "mtimeMs": 1621634337946,
    "ctimeMs": 1621634337946,
    "uid": 1,
    "gid": 1,
    "dev": 1
  }
}
```
```js
return fetch('/testing/custom-module.mjs--sw').then(res => res.headers.get('meta'))
```
```>txt attached=true updated=1621682390659
null
```
```>txt  updated=1621633305283
Module name, './custom-module' does not resolve to a valid URL.
```

- [x] ~After updating the service worker to return the correct mime type~, I suspect it's failing to resolve urls relative to the base64 data:uri setup. c.f. Original repl implementation which uses `createObjectURL`

```js #extract
const esm = ({ raw }, ...vals) =>
        URL.createObjectURL(
          new Blob([String.raw({ raw }, ...vals)], { type: "text/javascript" })
        );
```










