# Fuzzy text search

Related

- [[testing/compact_manifest]]

## Fuse.js

https://fusejs.io/

```js !collapse #intro
return (async (fn) => {
  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());
  const fuse = new Fuse(manifest.nodes, {
    includeScore: true,
    keys: ["title", "id"],
  });

  // 3. Now search!
  return fuse.search("../../..",{limit:5});
})();

```
```js !plugin !collapse type=repl of=search
export const repl = async (src, meta) => {
  const t = Date.now();

  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());

  const fullLocal = await (async (fn) => {
    const path = lit.utils.path;
    const all = [];
    const visit = async (root) => {
      const list = await lit.fs.readdir(root);
      return Promise.all(
        list.map(async (key) => {
          const pathname = path.join(root, key);
          const stat = await lit.fs.stat(pathname);
          let contents;
          if (key === ".git" || !key) {
          } else if (stat.type === "dir") await visit(pathname);
          else if (pathname.endsWith(".lit"))
            contents = await lit.fs.readFile(pathname, {
              encoding: "utf8",
              localOnly: true,
            }); //.slice(0,10);
          const item = { pathname, type: stat.type, contents };
          all.push(item);
          return item;
        })
      );
    };

    await visit("/");
    return all;
  })();

  // return fullLocal

  const fuse = new Fuse(fullLocal, {
    //ignoreLocation: true,
    includeScore: true,
    includeMatches: true,
    ignoreFieldNorm: true,
    minMatchCharLength: 2,
    keys: ["pathname", "contents"],
  });

  // 3. Now search!
  const query = src.trim();
  const msg = `Results for search "**${query}**". In **${
    (Date.now() - t) / 1000
  }** seconds.\n\n`;

  return (
    msg +
    fuse
      .search(query, { limit: 1 })
      //.map(x=>x.matches.map(x=>x.indices))
      .map((x) => [x.score, x.item.pathname, x.refIndex, x.matches])
      .map(
        ([score, pathname, index, matches]) =>
          `1. [${pathname}](${pathname}) ${matches.length}
    
      ${JSON.stringify(matches)}`
      )
      .join("\n")
  );
};

```

```text repl=search > md
agora
```
```>md attached=true updated=1621889305923
Results for search "**agora**". In **0.061** seconds.

1. [/testing/fuzzy_text_search.lit](/testing/fuzzy_text_search.lit) 2
   �
      [{"indices":[[22,23]],"value":"/testing/fuzzy_text_search.lit","key":"pathname"},{"indices":[[15,16],[114,115],[178,179],[385,386],[444,445],[466,467],[544,545],[552,553],[654,655],[928,930],[979,981],[1000,1001],[1083,1085],[1729,1730],[1761,1762],[1805,1806],[1814,1815],[1839,1840],[1909,1910],[1967,1968],[1972,1973],[2090,2091],[2184,2185],[2254,2255],[2442,2443],[2452,2456],[2514,2515],[2519,2520],[2791,2794],[2798,2799],[2826,2827],[2916,2917],[2921,2922],[2987,2988],[3019,3020],[3052,3053],[3081,3082],[3453,3454],[3471,3472],[3520,3521],[3554,3555],[3643,3644],[3672,3673],[3875,3876]],"value":"# Fuzzy text search\n\nRelated\n\n- [[testing/compact_manifest]]\n\n## Fuse.js\n\nhttps://fusejs.io/\n\n```js !collapse #intro\nreturn (async (fn) => {\n  const { default: Fuse } = await import(\n    \"https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js\"\n  );\n  const manifest = await fetch(\"/manifest.json\").then((res) => res.json());\n  const fuse = new Fuse(manifest.nodes, {\n    includeScore: true,\n    keys: [\"title\", \"id\"],\n  });\n\n  // 3. Now search!\n  return fuse.search(\"../../..\",{limit:5});\n})();\n\n```\n```js !plugin !collapse type=repl of=search\nexport const repl = async (src, meta) => {\n  const t = Date.now();\n\n  const { default: Fuse } = await import(\n    \"https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js\"\n  );\n  const manifest = await fetch(\"/manifest.json\").then((res) => res.json());\n\n  const fullLocal = await (async (fn) => {\n    const path = lit.utils.path;\n    const all = [];\n    const visit = async (root) => {\n      const list = await lit.fs.readdir(root);\n      return Promise.all(\n        list.map(async (key) => {\n          const pathname = path.join(root, key);\n          const stat = await lit.fs.stat(pathname);\n          let contents;\n          if (key === \".git\" || !key) {\n          } else if (stat.type === \"dir\") await visit(pathname);\n          else if (pathname.endsWith(\".lit\"))\n            contents = await lit.fs.readFile(pathname, {\n              encoding: \"utf8\",\n              localOnly: true,\n            }); //.slice(0,10);\n          const item = { pathname, type: stat.type, contents };\n          all.push(item);\n          return item;\n        })\n      );\n    };\n\n    await visit(\"/\");\n    return all;\n  })();\n\n  // return fullLocal\n\n  const fuse = new Fuse(fullLocal, {\n    ignoreLocation: true,\n    includeScore: true,\n    includeMatches: true,\n    ignoreFieldNorm: true,\n    minMatchCharLength: 2,\n    keys: [\"pathname\", \"contents\"],\n  });\n\n  // 3. Now search!\n  const query = src.trim();\n  const msg = `Results for search \"**${query}**\". In **${\n    (Date.now() - t) / 1000\n  }** seconds.\\n\\n`;\n\n  return (\n    msg +\n    fuse\n      .search(query, { limit: 1 })\n      //.map(x=>x.matches.map(x=>x.indices))\n      .map((x) => [x.score, x.item.pathname, x.refIndex, x.matches])\n      .map(\n        ([score, pathname, index, matches]) =>\n          `1. [${pathname}](${pathname}) ${matches.length}\n    \n      ${JSON.stringify(matches)}`\n      )\n      .join(\"\\n\")\n  );\n};\n\n```\n\n```text repl=search > md\nagora\n```\n```>md attached=true updated=1621889237250\nResults for search \"**notes**\". In **0.07** seconds.\n\n1. [/taking_notes.lit](/taking_notes.lit) 2\n   �\n      [{\"indices\":[[8,12]],\"value\":\"/taking_notes.lit\",\"key\":\"pathname\"},{\"indices\":[[2,5],[28,31],[46,47],[52,53],[62,64],[70,71],[75,77]],\"value\":\"# Note taking, a survey of contemporary projects\\n\\nA stub document for now, see backlinks below\",\"key\":\"contents\"}]\n```\n```>md updated=1621870142091\nResults for search \"**fuzz**\". In **0.074** seconds.\n\n1. [/testing/fuzzy_text_search.lit](/testing/fuzzy_text_search.lit) 0.000001\n1. [/testing/log/2021-05-23.lit](/testing/log/2021-05-23.lit) 0.001\n1. [/functions.lit](/functions.lit) 0.25\n1. [/testing/input_buffer.lit](/testing/input_buffer.lit) 0.25\n1. [/testing/full.json](/testing/full.json) 0.5\n1. [/utils/functions.js](/utils/functions.js) 0.5\n1. [/index.lit](/index.lit) 0.5\n1. [/execute_code_cells.lit](/execute_code_cells.lit) 0.5\n1. [/plugin_system.lit](/plugin_system.lit) 0.5\n1. [/scratch_pad.lit](/scratch_pad.lit) 0.5\n1. [/prismjs_and_a_simple_editor.lit](/prismjs_and_a_simple_editor.lit) 0.5\n1. [/testing/lightningfs.lit](/testing/lightningfs.lit) 0.5\n1. [/testing/isomorphic_git.lit](/testing/isomorphic_git.lit) 0.5\n1. [/testing/runkit.lit](/testing/runkit.lit) 0.5\n1. [/testing/selection.lit](/testing/selection.lit) 0.5\n```\n\n\n\n\n\n## FuzzySet\n\nhttps://github.com/Glench/fuzzyset.js\n\n```js\nreturn import('https://cdn.skypack.dev/fuzzyset').then( FuzzySet => {\n\n  const f = new FuzzySet.default()\n  f.add(\"the text of mine\")\n  f.add(\"the text of someone else\")\n  f.add(\"other texts\")\n  return f.get(\"text of\")\n})\n\n```\n```>txt attached=true updated=1621778112764\n[ [ 0.4375, 'the text of mine' ] ]\n```","key":"contents"}]
```
```>md updated=1621870142091
Results for search "**fuzz**". In **0.074** seconds.

1. [/testing/fuzzy_text_search.lit](/testing/fuzzy_text_search.lit) 0.000001
1. [/testing/log/2021-05-23.lit](/testing/log/2021-05-23.lit) 0.001
1. [/functions.lit](/functions.lit) 0.25
1. [/testing/input_buffer.lit](/testing/input_buffer.lit) 0.25
1. [/testing/full.json](/testing/full.json) 0.5
1. [/utils/functions.js](/utils/functions.js) 0.5
1. [/index.lit](/index.lit) 0.5
1. [/execute_code_cells.lit](/execute_code_cells.lit) 0.5
1. [/plugin_system.lit](/plugin_system.lit) 0.5
1. [/scratch_pad.lit](/scratch_pad.lit) 0.5
1. [/prismjs_and_a_simple_editor.lit](/prismjs_and_a_simple_editor.lit) 0.5
1. [/testing/lightningfs.lit](/testing/lightningfs.lit) 0.5
1. [/testing/isomorphic_git.lit](/testing/isomorphic_git.lit) 0.5
1. [/testing/runkit.lit](/testing/runkit.lit) 0.5
1. [/testing/selection.lit](/testing/selection.lit) 0.5
```





## FuzzySet

https://github.com/Glench/fuzzyset.js

```js
return import('https://cdn.skypack.dev/fuzzyset').then( FuzzySet => {

  const f = new FuzzySet.default()
  f.add("the text of mine")
  f.add("the text of someone else")
  f.add("other texts")
  return f.get("text of")
})

```
```>txt attached=true updated=1621778112764
[ [ 0.4375, 'the text of mine' ] ]
```