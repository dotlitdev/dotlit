# testing/runkit.lit

Experimenting using RunKit as a custom repl for nodejs. 

## Embed

Lets start with just the demo embed, https://runkit.com/docs/embed

```html !inline
<!-- anywhere else on your page -->
<div id="my-element">Run #init cell below ðŸ‘‡ </div>
```

```script https://embed.runkit.com !below
// inject https://embed.runkit.com
```

```js #init
return RunKit.createNotebook({
    // the parent element for the new notebook
    element: document.getElementById("my-element"),
    onEvaluate: (...args) => alert(JSON.stringify([...args])),
    // specify the source of the notebook
    source: "// GeoJSON!\nvar getJSON = require(\"async-get-json\");\n\nawait getJSON(\"https://storage.googleapis.com/maps-devrel/google.json\");"
})
```
```>txt attached=true updated=1620992547444
{ onEvaluate: [Function: onEvaluate],
  onLoad: undefined,
  onResize: undefined,
  onSave: undefined,
  onURLChanged: undefined,
  UUID: 0,
  name: 'runkit-embed-0',
  URL: null,
  endpointURL: null }
```

react bindings for simple embed: https://github.com/runkitdev/react-runkit

and trying out https://runkit.com/docs/endpoint


```jsx babel=true react=true repl=js
return (async fn => {

  const React = lit.utils.React
  const Embed = (await import('https://cdn.skypack.dev/runkit-embed-react')).default

  const helloSource = `exports.endpoint = function(request, response) {
    response.end("Hello world!");
}`

  class App extends React.Component {
    run() {
        this.refs.embed.evaluate()
    }
    render() {
        return (
          <Embed
            mode='endpoint'
            source={ helloSource } 
            ref='embed'
            onLoad={ this.run.bind(this) } 
          />
        )
    }
  }

  return <App/>

})()
```
```>txt attached=true updated=1620994685767 !error
SyntaxError: /untitled.jsx: Missing semicolon (17:3)

  15 | ```lang
  16 |
> 17 | ```       this.refs.embed.evaluate()
     |    ^
  18 |     }
  19 |     render() {
  20 |         return (
```

```uri !below

```