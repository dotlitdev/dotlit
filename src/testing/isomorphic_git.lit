# Isomorphic Git


Since `.lit` already uses [[testing/LightningFS]] for the local filesystem we can easily use https://isomorphic-git.org/docs/en/quickstart to manage versioning...

## Table of Contents

## Initial plan

The initial plan is to just auto commit on all actions, enabling "infinite" undo.

Thereafter that may remain the default but ideally an ergonomic version of the raw git api can be exposed for more advanced users.

*Implementation*





```js ../utils/git-commit-all.js !plugin type=fn id=git-commit-all !collapse
// initially, because it's on every change 
// a commit will mostly be for a single
// file at a time the immediate exception 
// being when a file with output files 
// is edited, in which case the commit 
// includes those files.

export const fn = async () => {
  const now = (new Date()).toISOString()

  const fs = lit.lfs 
  const dir = lit.location.root
  const git = lit.git
  const FILE = 0, WORKDIR = 2, STAGE = 3

  const unstaged = row => {
    return row[WORKDIR] !== row[STAGE]
  }

  // get/list unstaged files
  const status = await git.statusMatrix({ fs,dir})
  const files = status
                .filter( unstaged )
                .map(row => row[FILE])

  // stage everything
  await git.add({fs, dir, filepath: '.'})

  // message 
  const message = `Commit ${lit.location.src}

at ${now} includes the following ${files.length} files:
${files.map(f=> "- " + f).join('\n')}`

  // return message

  // commit
  const sha = await git.commit({fs, dir,
    message,
    author: {
      name: 'dotlitbot',
      email: 'bot@dotlit.org'
    }
  })
  return `Committed ${sha.slice(0,6)} 
${message}`
}
```
```js !plugin id=git type=menu !collapse
export const menu = (ctx, {React, Menu}) => {
  const rc = React.createElement
  const commit = lit.file.data.plugins.fn['git-commit-all']
  const onClick = async ev => alert(await commit())
  return rc( Menu, {
    title:"Git",
    disabled: false,
  }, [rc('span', {onClick}, 'Commit All')])
}
```
```txt updated=1619425559711
Committed d738da 
Auto commit testing/isomorphic_git.lit

at: 2021-04-26T08:25:54.893Z
includes the following 2 files:
- testing/isomorphic_git.lit
- utils/git-commit-all.js
```
## Investigating API


```js
return lit.fs
       .readFile('/.git/HEAD', {
          encoding: 'utf8'
        })
```
```>txt attached=true updated=1622725790535
ref: refs/heads/master

```
```js
return lit.fs
       .readFile('/.git/refs/heads/master', {
          encoding: 'utf8'
        })
```
```>txt attached=true updated=1622726460879
c87e4931458d48d27b0b1aeec2f48da44b88d027

```
```js #init
return (async () => {
  return await lit.git.init({
    fs: lit.lfs, 
    dir: lit.location.root
  })
})()
```
```>txt attached=true updated=1622725787006
undefined
```
### Status

```js
return (async () => {
  return lit.location.src + " : " + await lit.git.status({
    fs: lit.lfs, 
    dir: lit.location.root, 
    filepath: '.' 
  })
})()
```
```>txt attached=true updated=1621335274603
testing/isomorphic_git.lit : *added
```
```js
return (async () => {
  return await lit.git.statusMatrix({
    fs: lit.lfs, 
    dir: lit.location.root, 
    filepaths: ['testing/']
  })
})()
```
```>txt attached=true updated=1622726000046
[ [ 'testing/<', 1, 1, 1 ],
  [ 'testing/autoformatting_cell_source.lit', 1, 1, 1 ],
  [ 'testing/autoformatting_cell_source.lit#prettier', 1, 1, 1 ],
  [ 'testing/compactManifest1.json', 1, 1, 1 ],
  [ 'testing/compact_manifest.lit', 1, 1, 1 ],
  [ 'testing/cors_proxy.lit', 1, 1, 1 ],
  [ 'testing/custom-module.js', 1, 1, 1 ],
  [ 'testing/custom-module.mjs', 1, 1, 1 ],
  [ 'testing/esm_viewer_repl.lit', 1, 1, 1 ],
  [ 'testing/full.json', 1, 1, 1 ],
  [ 'testing/fuzzy_text_search.lit', 1, 1, 1 ],
  [ 'testing/gitworker.js', 1, 1, 1 ],
  [ 'testing/importing_js_modules.lit', 1, 1, 1 ],
  [ 'testing/index.lit', 1, 1, 1 ],
  [ 'testing/input_buffer.lit', 1, 1, 1 ],
  [ 'testing/isomorphic_git.lit', 1, 2, 1 ],
  [ 'testing/lightningfs.lit', 1, 1, 1 ],
  [ 'testing/links.lit', 1, 1, 1 ],
  [ 'testing/local_remote_files.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-09.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-11.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-12.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-13.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-15.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-16.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-17.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-18.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-19.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-20.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-21.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-23.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-25.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-27.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-29.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05-30.lit', 1, 1, 1 ],
  [ 'testing/log/2021-05.lit', 1, 1, 1 ],
  [ 'testing/log/2021-06-01.lit', 1, 1, 1 ],
  [ 'testing/log/2021-06-02.lit', 1, 1, 1 ],
  [ 'testing/log/2021-w20.lit', 1, 1, 1 ],
  [ 'testing/log/2021-w21.lit', 1, 1, 1 ],
  [ 'testing/log/2021.lit', 1, 1, 1 ],
  [ 'testing/log/checkforinput.js', 1, 1, 1 ],
  [ 'testing/log/day.lit', 1, 1, 1 ],
  [ 'testing/log/today.js', 1, 1, 1 ],
  [ 'testing/paths.lit', 1, 1, 1 ],
  [ 'testing/private_files.lit', 1, 1, 1 ],
  [ 'testing/repl-output.svg', 1, 1, 1 ],
  [ 'testing/runkit-cors-proxy-endpoint.js', 1, 1, 1 ],
  [ 'testing/runkit-express-cors-proxy.js', 1, 1, 1 ],
  [ 'testing/runkit-repl-endpoint.js', 1, 1, 1 ],
  [ 'testing/runkit.lit', 1, 1, 1 ],
  [ 'testing/selection.lit', 1, 1, 1 ],
  [ 'testing/serviceworker.lit', 1, 1, 1 ],
  [ 'testing/test.txt', 1, 1, 1 ],
  [ 'testing/testing/repl-output.svg', 1, 1, 1 ],
  [ 'testing/web_workers.lit', 1, 1, 1 ],
  [ 'testing/worker.js', 1, 1, 1 ],
  [ 'testing/worker2.js', 1, 1, 1 ] ]
```



```js
const fs = lit.lfs 
const dir = lit.location.root
const git = lit.git
const FILE = 0, WORKDIR = 2, STAGE = 3

// list files with unstaged changes
return (async () => {
  const filenames = (await git.statusMatrix({ fs,dir}))
  .filter(row => row[WORKDIR] !== row[STAGE])
  .map(row => row[FILE])
  return filenames
})()
```
```>txt attached=true updated=1622726005216
[ 'testing/isomorphic_git.lit' ]
```
### Add

```js

const fs = lit.lfs
const dir = lit.location.root

return (async ()=> {
  return await lit.git.add({
    fs,
    dir,
    filepath: '.'
  })
})()
```
```>txt attached=true updated=1622725837890
undefined
```



### Commit

```js

const fs = lit.lfs
const dir = lit.location.root

return (async ()=> {
const now = (new Date()).toISOString()
let sha = await lit.git.commit({
  fs,
  dir,
  message: `Auto commit (${now})`,
  author: {
    name: 'dotlit',
    email: 'bit@dotlit.org'
  }
})

console.log(sha)

})()
```
```>txt attached=true updated=1622725844680
46ceec21a687227f28f6f1ca3139b6a0cd37fad5
undefined
```

### Log

```js > md
const indentLines = str => str.split('\n').map( line => `      ${line}`).join('\n')

return (async ()=> {
  let commits = await lit.git.log({
     fs: lit.lfs, 
     dir: lit.location.root, 
     depth: 10
  })
  return "**Log**\n" + commits.map( x => `1. **\`${x.oid.slice(0,6)}\`**

${indentLines(x.commit.message)}`).join('\n')
})()
```
```>md attached=true updated=1622726081815
**Log**
1. **`c87e49`**

      Commit /testing/isomorphic_git.lit
      
      at 2021-06-03T13:14:34.272Z includes the following 1 files:
      - testing/isomorphic_git.lit
      
1. **`46ceec`**

      Auto commit (2021-06-03T13:10:44.622Z)
      
```

### Diff

```js
const {git, lfs} = lit
return [git.walk, git.TREE]
```
```>txt attached=true updated=1620405199415
[ [Function: walk], [Function: TREE] ]
```
```js !collapse
return lit.git
  const commitHash1 = '0c40ed746ebe53cf744d78191d0bbc2941537280'
  const commitHash2 = 'b081f51cd27f54cf58915512006838d4eb67716b'
  const git = lit.git
  return git.walk({
    lit.lfs,
    lit.location.root,
    trees: [git.TREE({ ref: commitHash1 }), git.TREE({ ref: commitHash2 })],
    map: async function(filepath, [A, B]) {
     Â return filepath
    })
  )}
```
```>txt attached=true updated=1620405076140 !error
undefined
```

## Http client

Requires a CORS Proxy!

```js !plugin type=proxy id=corsProxy !collapse < ../plugins/other/cors-proxy.js
```
```js #get #endpoint
return (async (fn) => {
  const endpoint = await lit.file.data.plugins.proxy.corsProxy(true);
  return endpoint
})();

```
```>txt attached=true updated=1622981977595
https://1njdpunvtrky.runkit.sh
```

```js

return (async fn =>{
  const http = await import('https://unpkg.com/isomorphic-git/http/web/index.js')
  return lit.git.getRemoteInfo({ http: http.default, corsProxy: 'https://1njdpunvtrky.runkit.sh',url: 'https://github.com/isomorphic-git/isomorphic-git' })
})()

```
```>txt attached=true updated=1622982005133
{ capabilities: 
   [ 'multi_ack',
     'thin-pack',
     'side-band',
     'side-band-64k',
     'ofs-delta',
     'shallow',
     'deepen-since',
     'deepen-not',
     'deepen-relative',
     'no-progress',
     'include-tag',
     'multi_ack_detailed',
     'allow-tip-sha1-in-want',
     'allow-reachable-sha1-in-want',
     'no-done',
     'symref=HEAD:refs/heads/main',
     'filter',
     'object-format=sha1',
     'agent=git/github-g69d6dd5d35d8' ],
  HEAD: 'refs/heads/main',
  refs: 
   { heads: 
      { 'akaJes-listFiles-detailed': 'd52a8bd0d7626c35094e962c70b0fc81c2f06765',
        'akaJes-patch-status': 'ac4056cee75051beb9789ba95ed5dd65d90169f4',
        beta: 'ed0126f8fa091aec11d646ee7a737b7dfd1317f8',
        bump: [Object],
        chore: [Object],
        dependabot: [Object],
        dist: 'a2dd810e222b7b02fc53760037d9928cb97c645d',
        exp: [Object],
        fail: 'df7901787fc6535ef31004a336598c23189c0b5c',
        feat: [Object],
        fix: [Object],
        'http-receiver': 'f24ddc0589a548ec0f19e692fb46731e035becf2',
        main: '7bd6e2ddf058645303967b4fc387987663f4bd3b',
        moddable: '946d2cc7b6cb80dc211b114fbc5b5996e3f3dd91',
        'no-buffer': 'c1392fbacb0cc2a4370d8dcbc6048d61e20b698f',
        perf: [Object],
        'test-branch': 'e10ebb90d03eaacca84de1af0a59b444232da99e',
        'test-branch-shallow-clone': '92e7b4123fbf135f5ffa9b6fe2ec78d07bbc353e',
        'wmhilton-patch-1': '412a7142677e0d7fc73a1d29d13350d5e37a7c73' },
     notes: { 'semantic-release': '99960591b74c6059050620b1dab94bd2d00027e2' },
     pull: 
      { '5': [Object],
        '20': [Object],
        '21': [Object],
        '23': [Object],
        '24': [Object],
        '28': [Object],
        '30': [Object],
        '31': [Object],
        '33': [Object],
        '35': [Object],
        '36': [Object],
        '49': [Object],
        '51': [Object],
        '52': [Object],
        '53': [Object],
        '54': [Object],
        '55': [Object],
        '56': [Object],
        '57': [Object],
        '58': [Object],
        '59': [Object],
        '60': [Object],
        '61': [Object],
        '62': [Object],
        '63': [Object],
        '64': [Object],
        '65': [Object],
        '66': [Object],
        '67': [Object],
        '68': [Object],
        '69': [Object],
        '70': [Object],
        '71': [Object],
        '72': [Object],
        '73': [Object],
        '74': [Object],
        '75': [Object],
        '76': [Object],
        '77': [Object],
        '79': [Object],
        '80': [Object],
        '81': [Object],
        '82': [Object],
        '83': [Object],
        '85': [Object],
        '87': [Object],
        '89': [Object],
        '90': [Object],
        '91': [Object],
        '92': [Object],
        '94': [Object],
        '95': [Object],
        '96': [Object],
        '98': [Object],
        '99': [Object],
        '100': [Object],
        '101': [Object],
        '102': [Object],
        '103': [Object],
        '104': [Object],
        '105': [Object],
        '109': [Object],
        '111': [Object],
        '112': [Object],
        '113': [Object],
        '114': [Object],
        '115': [Object],
        '116': [Object],
        '117': [Object],
        '118': [Object],
        '119': [Object],
        '120': [Object],
        '121': [Object],
        '122': [Object],
        '123': [Object],
        '124': [Object],
        '125': [Object],
        '126': [Object],
        '127': [Object],
        '128': [Object],
        '130': [Object],
        '132': [Object],
        '133': [Object],
        '134': [Object],
        '135': [Object],
        '136': [Object],
        '137': [Object],
        '138': [Object],
        '139': [Object],
        '140': [Object],
        '141': [Object],
        '142': [Object],
        '143': [Object],
        '145': [Object],
        '147': [Object],
        '148': [Object],
        '149': [Object],
        '150': [Object],
        '151': [Object],
        '152': [Object],
        '153': [Object],
        '156': [Object],
        '157': [Object],
        '158': [Object],
        '159': [Object],
        '160': [Object],
        '161': [Object],
        '162': [Object],
        '164': [Object],
        '165': [Object],
        '166': [Object],
        '167': [Object],
        '168': [Object],
        '169': [Object],
        '170': [Object],
        '171': [Object],
        '172': [Object],
        '173': [Object],
        '174': [Object],
        '175': [Object],
        '176': [Object],
        '177': [Object],
        '178': [Object],
        '180': [Object],
        '181': [Object],
        '182': [Object],
        '183': [Object],
        '184': [Object],
        '185': [Object],
        '186': [Object],
        '190': [Object],
        '195': [Object],
        '200': [Object],
        '203': [Object],
        '204': [Object],
        '205': [Object],
        '207': [Object],
        '209': [Object],
        '211': [Object],
        '216': [Object],
        '217': [Object],
        '224': [Object],
        '229': [Object],
        '238': [Object],
        '239': [Object],
        '240': [Object],
        '241': [Object],
        '248': [Object],
        '249': [Object],
        '252': [Object],
        '255': [Object],
        '256': [Object],
        '257': [Object],
        '260': [Object],
        '261': [Object],
        '262': [Object],
        '263': [Object],
        '264': [Object],
        '265': [Object],
        '266': [Object],
        '267': [Object],
        '269': [Object],
        '270': [Object],
        '271': [Object],
        '272': [Object],
        '273': [Object],
        '274': [Object],
        '277': [Object],
        '278': [Object],
        '279': [Object],
        '280': [Object],
        '281': [Object],
        '282': [Object],
        '283': [Object],
        '285': [Object],
        '286': [Object],
        '287': [Object],
        '288': [Object],
        '289': [Object],
        '290': [Object],
        '293': [Object],
        '295': [Object],
        '296': [Object],
        '298': [Object],
        '299': [Object],
        '300': [Object],
        '301': [Object],
        '302': [Object],
        '304': [Object],
        '305': [Object],
        '308': [Object],
        '311': [Object],
        '313': [Object],
        '314': [Object],
        '317': [Object],
        '318': [Object],
        '320': [Object],
        '321': [Object],
        '323': [Object],
        '326': [Object],
        '327': [Object],
        '328': [Object],
        '329': [Object],
        '330': [Object],
        '331': [Object],
        '339': [Object],
        '340': [Object],
        '341': [Object],
        '342': [Object],
        '343': [Object],
        '349': [Object],
        '350': [Object],
        '351': [Object],
        '353': [Object],
        '355': [Object],
        '356': [Object],
        '357': [Object],
        '361': [Object],
        '363': [Object],
        '364': [Object],
        '365': [Object],
        '367': [Object],
        '368': [Object],
        '369': [Object],
        '371': [Object],
        '372': [Object],
        '373': [Object],
        '374': [Object],
        '378': [Object],
        '380': [Object],
        '381': [Object],
        '382': [Object],
        '383': [Object],
        '385': [Object],
        '387': [Object],
        '388': [Object],
        '389': [Object],
        '391': [Object],
        '392': [Object],
        '393': [Object],
        '396': [Object],
        '397': [Object],
        '399': [Object],
        '401': [Object],
        '402': [Object],
        '403': [Object],
        '404': [Object],
        '405': [Object],
        '406': [Object],
        '407': [Object],
        '408': [Object],
        '409': [Object],
        '410': [Object],
        '411': [Object],
        '412': [Object],
        '413': [Object],
        '414': [Object],
        '415': [Object],
        '416': [Object],
        '417': [Object],
        '418': [Object],
        '419': [Object],
        '420': [Object],
        '421': [Object],
        '422': [Object],
        '423': [Object],
        '424': [Object],
        '425': [Object],
        '426': [Object],
        '427': [Object],
        '428': [Object],
        '429': [Object],
        '430': [Object],
        '431': [Object],
        '432': [Object],
        '433': [Object],
        '434': [Object],
        '435': [Object],
        '436': [Object],
        '437': [Object],
        '438': [Object],
        '440': [Object],
        '441': [Object],
        '442': [Object],
        '443': [Object],
        '447': [Object],
        '448': [Object],
        '449': [Object],
        '450': [Object],
        '451': [Object],
        '452': [Object],
        '453': [Object],
        '454': [Object],
        '455': [Object],
        '456': [Object],
        '457': [Object],
        '458': [Object],
        '459': [Object],
        '460': [Object],
        '461': [Object],
        '463': [Object],
        '465': [Object],
        '466': [Object],
        '469': [Object],
        '470': [Object],
        '471': [Object],
        '472': [Object],
        '473': [Object],
        '474': [Object],
        '476': [Object],
        '477': [Object],
        '478': [Object],
        '479': [Object],
        '480': [Object],
        '481': [Object],
        '482': [Object],
        '483': [Object],
        '484': [Object],
        '486': [Object],
        '487': [Object],
        '488': [Object],
        '489': [Object],
        '490': [Object],
        '491': [Object],
        '492': [Object],
        '494': [Object],
        '495': [Object],
        '496': [Object],
        '497': [Object],
        '499': [Object],
        '501': [Object],
        '502': [Object],
        '503': [Object],
        '504': [Object],
        '505': [Object],
        '506': [Object],
        '507': [Object],
        '508': [Object],
        '509': [Object],
        '510': [Object],
        '512': [Object],
        '513': [Object],
        '514': [Object],
        '515': [Object],
        '516': [Object],
        '517': [Object],
        '521': [Object],
        '522': [Object],
        '523': [Object],
        '524': [Object],
        '525': [Object],
        '526': [Object],
        '527': [Object],
        '528': [Object],
        '529': [Object],
        '531': [Object],
        '532': [Object],
        '533': [Object],
        '535': [Object],
        '536': [Object],
        '537': [Object],
        '538': [Object],
        '539': [Object],
        '540': [Object],
        '541': [Object],
        '542': [Object],
        '543': [Object],
        '544': [Object],
        '545': [Object],
        '546': [Object],
        '547': [Object],
        '548': [Object],
        '549': [Object],
        '550': [Object],
        '551': [Object],
        '552': [Object],
        '553': [Object],
        '554': [Object],
        '556': [Object],
        '557': [Object],
        '558': [Object],
        '559': [Object],
        '560': [Object],
        '561': [Object],
        '562': [Object],
        '563': [Object],
        '564': [Object],
        '565': [Object],
        '566': [Object],
        '567': [Object],
        '568': [Object],
        '569': [Object],
        '570': [Object],
        '571': [Object],
        '572': [Object],
        '573': [Object],
        '574': [Object],
        '575': [Object],
        '576': [Object],
        '577': [Object],
        '578': [Object],
        '579': [Object],
        '580': [Object],
        '581': [Object],
        '582': [Object],
        '584': [Object],
        '586': [Object],
        '587': [Object],
        '590': [Object],
        '591': [Object],
        '592': [Object],
        '594': [Object],
        '599': [Object],
        '602': [Object],
        '603': [Object],
        '604': [Object],
        '605': [Object],
        '606': [Object],
        '607': [Object],
        '609': [Object],
        '611': [Object],
        '612': [Object],
        '613': [Object],
        '616': [Object],
        '618': [Object],
        '619': [Object],
        '621': [Object],
        '623': [Object],
        '626': [Object],
        '627': [Object],
        '628': [Object],
        '629': [Object],
        '630': [Object],
        '632': [Object],
        '633': [Object],
        '634': [Object],
        '635': [Object],
        '636': [Object],
        '637': [Object],
        '638': [Object],
        '641': [Object],
        '643': [Object],
        '644': [Object],
        '645': [Object],
        '646': [Object],
        '648': [Object],
        '650': [Object],
        '651': [Object],
        '652': [Object],
        '655': [Object],
        '657': [Object],
        '658': [Object],
        '659': [Object],
        '660': [Object],
        '661': [Object],
        '662': [Object],
        '664': [Object],
        '666': [Object],
        '667': [Object],
        '673': [Object],
        '674': [Object],
        '675': [Object],
        '676': [Object],
        '679': [Object],
        '680': [Object],
        '683': [Object],
        '684': [Object],
        '686': [Object],
        '687': [Object],
        '688': [Object],
        '693': [Object],
        '695': [Object],
        '697': [Object],
        '699': [Object],
        '700': [Object],
        '702': [Object],
        '703': [Object],
        '704': [Object],
        '706': [Object],
        '710': [Object],
        '716': [Object],
        '717': [Object],
        '718': [Object],
        '719': [Object],
        '722': [Object],
        '723': [Object],
        '725': [Object],
        '726': [Object],
        '730': [Object],
        '733': [Object],
        '736': [Object],
        '737': [Object],
        '739': [Object],
        '740': [Object],
        '741': [Object],
        '742': [Object],
        '744': [Object],
        '745': [Object],
        '746': [Object],
        '747': [Object],
        '748': [Object],
        '749': [Object],
        '751': [Object],
        '753': [Object],
        '754': [Object],
        '755': [Object],
        '757': [Object],
        '758': [Object],
        '759': [Object],
        '760': [Object],
        '762': [Object],
        '764': [Object],
        '768': [Object],
        '769': [Object],
        '770': [Object],
        '773': [Object],
        '775': [Object],
        '776': [Object],
        '777': [Object],
        '779': [Object],
        '782': [Object],
        '784': [Object],
        '785': [Object],
        '786': [Object],
        '787': [Object],
        '789': [Object],
        '790': [Object],
        '791': [Object],
        '792': [Object],
        '794': [Object],
        '795': [Object],
        '796': [Object],
        '799': [Object],
        '801': [Object],
        '802': [Object],
        '803': [Object],
        '804': [Object],
        '805': [Object],
        '806': [Object],
        '807': [Object],
        '808': [Object],
        '811': [Object],
        '812': [Object],
        '813': [Object],
        '814': [Object],
        '816': [Object],
        '817': [Object],
        '818': [Object],
        '820': [Object],
        '821': [Object],
        '822': [Object],
        '823': [Object],
        '824': [Object],
        '825': [Object],
        '826': [Object],
        '827': [Object],
        '828': [Object],
        '829': [Object],
        '830': [Object],
        '831': [Object],
        '832': [Object],
        '833': [Object],
        '834': [Object],
        '835': [Object],
        '836': [Object],
        '837': [Object],
        '838': [Object],
        '840': [Object],
        '842': [Object],
        '843': [Object],
        '844': [Object],
        '845': [Object],
        '846': [Object],
        '847': [Object],
        '848': [Object],
        '849': [Object],
        '850': [Object],
        '851': [Object],
        '852': [Object],
        '853': [Object],
        '854': [Object],
        '855': [Object],
        '856': [Object],
        '857': [Object],
        '858': [Object],
        '859': [Object],
        '860': [Object],
        '861': [Object],
        '862': [Object],
        '863': [Object],
        '864': [Object],
        '867': [Object],
        '868': [Object],
        '869': [Object],
        '870': [Object],
        '872': [Object],
        '873': [Object],
        '874': [Object],
        '875': [Object],
        '876': [Object],
        '877': [Object],
        '878': [Object],
        '879': [Object],
        '880': [Object],
        '881': [Object],
        '882': [Object],
        '883': [Object],
        '884': [Object],
        '885': [Object],
        '888': [Object],
        '890': [Object],
        '891': [Object],
        '892': [Object],
        '893': [Object],
        '895': [Object],
        '896': [Object],
        '897': [Object],
        '900': [Object],
        '901': [Object],
        '902': [Object],
        '903': [Object],
        '904': [Object],
        '905': [Object],
        '906': [Object],
        '907': [Object],
        '908': [Object],
        '909': [Object],
        '910': [Object],
        '913': [Object],
        '914': [Object],
        '916': [Object],
        '917': [Object],
        '918': [Object],
        '920': [Object],
        '921': [Object],
        '922': [Object],
        '923': [Object],
        '924': [Object],
        '925': [Object],
        '926': [Object],
        '927': [Object],
        '928': [Object],
        '929': [Object],
        '930': [Object],
        '931': [Object],
        '932': [Object],
        '934': [Object],
        '935': [Object],
        '936': [Object],
        '937': [Object],
        '939': [Object],
        '940': [Object],
        '943': [Object],
        '944': [Object],
        '945': [Object],
        '946': [Object],
        '948': [Object],
        '949': [Object],
        '950': [Object],
        '951': [Object],
        '953': [Object],
        '954': [Object],
        '955': [Object],
        '956': [Object],
        '959': [Object],
        '960': [Object],
        '961': [Object],
        '962': [Object],
        '964': [Object],
        '965': [Object],
        '966': [Object],
        '967': [Object],
        '968': [Object],
        '969': [Object],
        '970': [Object],
        '971': [Object],
        '972': [Object],
        '974': [Object],
        '977': [Object],
        '981': [Object],
        '983': [Object],
        '984': [Object],
        '985': [Object],
        '986': [Object],
        '987': [Object],
        '988': [Object],
        '989': [Object],
        '990': [Object],
        '991': [Object],
        '992': [Object],
        '993': [Object],
        '994': [Object],
        '995': [Object],
        '996': [Object],
        '997': [Object],
        '998': [Object],
        '999': [Object],
        '1000': [Object],
        '1001': [Object],
        '1002': [Object],
        '1003': [Object],
        '1004': [Object],
        '1005': [Object],
        '1006': [Object],
        '1007': [Object],
        '1008': [Object],
        '1009': [Object],
        '1010': [Object],
        '1011': [Object],
        '1012': [Object],
        '1013': [Object],
        '1014': [Object],
        '1015': [Object],
        '1016': [Object],
        '1017': [Object],
        '1018': [Object],
        '1019': [Object],
        '1020': [Object],
        '1023': [Object],
        '1024': [Object],
        '1025': [Object],
        '1026': [Object],
        '1027': [Object],
        '1028': [Object],
        '1030': [Object],
        '1031': [Object],
        '1033': [Object],
        '1034': [Object],
        '1036': [Object],
        '1037': [Object],
        '1038': [Object],
        '1039': [Object],
        '1040': [Object],
        '1043': [Object],
        '1044': [Object],
        '1045': [Object],
        '1047': [Object],
        '1048': [Object],
        '1049': [Object],
        '1050': [Object],
        '1051': [Object],
        '1052': [Object],
        '1053': [Object],
        '1054': [Object],
        '1055': [Object],
        '1056': [Object],
        '1057': [Object],
        '1058': [Object],
        '1059': [Object],
        '1061': [Object],
        '1062': [Object],
        '1065': [Object],
        '1066': [Object],
        '1068': [Object],
        '1069': [Object],
        '1070': [Object],
        '1074': [Object],
        '1075': [Object],
        '1077': [Object],
        '1081': [Object],
        '1083': [Object],
        '1085': [Object],
        '1086': [Object],
        '1087': [Object],
        '1089': [Object],
        '1090': [Object],
        '1092': [Object],
        '1094': [Object],
        '1095': [Object],
        '1100': [Object],
        '1101': [Object],
        '1106': [Object],
        '1107': [Object],
        '1109': [Object],
        '1111': [Object],
        '1112': [Object],
        '1113': [Object],
        '1114': [Object],
        '1115': [Object],
        '1118': [Object],
        '1119': [Object],
        '1120': [Object],
        '1127': [Object],
        '1132': [Object],
        '1133': [Object],
        '1135': [Object],
        '1137': [Object],
        '1141': [Object],
        '1142': [Object],
        '1143': [Object],
        '1146': [Object],
        '1147': [Object],
        '1148': [Object],
        '1149': [Object],
        '1151': [Object],
        '1152': [Object],
        '1154': [Object],
        '1155': [Object],
        '1156': [Object],
        '1161': [Object],
        '1164': [Object],
        '1168': [Object],
        '1169': [Object],
        '1171': [Object],
        '1172': [Object],
        '1175': [Object],
        '1176': [Object],
        '1177': [Object],
        '1181': [Object],
        '1183': [Object],
        '1184': [Object],
        '1189': [Object],
        '1190': [Object],
        '1191': [Object],
        '1192': [Object],
        '1194': [Object],
        '1195': [Object],
        '1196': [Object],
        '1197': [Object],
        '1199': [Object],
        '1200': [Object],
        '1201': [Object],
        '1202': [Object],
        '1204': [Object],
        '1207': [Object],
        '1208': [Object],
        '1210': [Object],
        '1211': [Object],
        '1212': [Object],
        '1214': [Object],
        '1216': [Object],
        '1217': [Object],
        '1218': [Object],
        '1219': [Object],
        '1220': [Object],
        '1221': [Object],
        '1222': [Object],
        '1225': [Object],
        '1226': [Object],
        '1227': [Object],
        '1228': [Object],
        '1230': [Object],
        '1232': [Object],
        '1233': [Object],
        '1234': [Object],
        '1235': [Object],
        '1247': [Object],
        '1248': [Object],
        '1249': [Object],
        '1250': [Object],
        '1252': [Object],
        '1253': [Object],
        '1255': [Object],
        '1257': [Object],
        '1259': [Object],
        '1260': [Object],
        '1264': [Object],
        '1265': [Object],
        '1266': [Object],
        '1268': [Object],
        '1269': [Object],
        '1270': [Object],
        '1271': [Object],
        '1272': [Object],
        '1280': [Object],
        '1282': [Object],
        '1284': [Object],
        '1285': [Object],
        '1287': [Object],
        '1288': [Object],
        '1289': [Object],
        '1290': [Object],
        '1291': [Object],
        '1293': [Object],
        '1294': [Object],
        '1295': [Object],
        '1296': [Object],
        '1300': [Object],
        '1301': [Object],
        '1302': [Object],
        '1303': [Object],
        '1304': [Object],
        '1306': [Object],
        '1309': [Object],
        '1311': [Object],
        '1312': [Object],
        '1314': [Object],
        '1315': [Object],
        '1316': [Object],
        '1317': [Object],
        '1319': [Object],
        '1320': [Object],
        '1321': [Object],
        '1322': [Object],
        '1323': [Object],
        '1324': [Object],
        '1326': [Object],
        '1327': [Object],
        '1329': [Object],
        '1331': [Object],
        '1333': [Object],
        '1334': [Object],
        '1335': [Object],
        '1336': [Object],
        '1338': [Object],
        '1339': [Object],
        '1340': [Object],
        '1341': [Object],
        '1342': [Object],
        '1343': [Object],
        '1345': [Object],
        '1347': [Object],
        '1348': [Object],
        '1349': [Object],
        '1350': [Object],
        '1351': [Object],
        '1352': [Object],
        '1353': [Object],
        '1354': [Object],
        '1355': [Object],
        '1357': [Object],
        '1358': [Object],
        '1359': [Object] },
     tags: 
      { latest: '80b7d103dc528fc002f5b916a0b055a8e1992797',
        'test-tag': '1e40fdfba1cf17f3c9f9f3d6b392b1865e5147b9',
        'v0.0.1': '1a2149e96a9767b281a8f10fd014835322da2d14',
        'v0.0.10': '0a117b8378f5e5323d15694c7eb8f62c4bea152b',
        'v0.0.10^{}': 'ce03143bd6567fc7063549c204e877834cda5645',
        'v0.0.11': 'acd8de39da34f0f05b07f0494675afa914fadbd9',
        'v0.0.11^{}': '8388a3d4197bf9e02bb97dfdc920fe6b6353453d',
        'v0.0.12': '9dba4bc0f13b98a21a9f8c41b9dcc174df6e8dd9',
        'v0.0.12^{}': '8d74454009b9bf7bf1df39ad31c8191bd9ac591b',
        'v0.0.13': '0d7c8bcac6c824e8a857eeceeab4416427314202',
        'v0.0.13^{}': 'af70a57e828aa1f7de829b1987915abe3aeeab85',
        'v0.0.14': '1560793d9e6c08dddb9218ec7a58a96f55664f7f',
        'v0.0.14^{}': '71cfcca36f2403662acf3390ae7654a0cb52fbfc',
        'v0.0.15': '78bae74bb8d82877c703cca5da8a6ffd50facd17',
        'v0.0.15^{}': 'f531be257f90a5211ed5f63a417b1a3bc27ab2bb',
        'v0.0.16': '8c2189d3745bb88f2e34d2dbb97028a9dead1a29',
        'v0.0.16^{}': '252cb320650c604db9e504e0b04dea0e94922802',
        'v0.0.17': '6f09d58133a791fc3a2493471d4b3d49f9e935d6',
        'v0.0.17^{}': '5354394fb099b5713c60fe6be2350457d6d2d658',
        'v0.0.18': '1739d0abdf493ad61caf11a10417dbf0f87bd2c9',
        'v0.0.18^{}': '2359fff39771f72c94b8b034803c7722319a1405',
        'v0.0.19': '180c9e01421744a307fb309f79b828ef71b47f4c',
        'v0.0.19^{}': '9e4130538be3129100aecf9218a6be0fc35f9911',
        'v0.0.2': '9e3ee22249ed50acccfd3996dadb5d27019a7dad',
        'v0.0.20': '993509d291a58bc8c8dd8d23829d5294e057de22',
        'v0.0.20^{}': '12cef164723a8ebcbbc2b9a48212a83bfcd9eecf',
        'v0.0.21': '5b71480a0e679bf29cad790a78fd4df551a96097',
        'v0.0.21^{}': 'b25b4120b1ee4fc2ec4c2016268e1e42602b6a86',
        'v0.0.22': '259ccc39944411d632189e4d7e009cd5d2485636',
        'v0.0.22^{}': 'eb95df88672e6f258ef6b759ab341f8b99dc477a',
        'v0.0.23': 'c0bc224f093f93d99c6e68b6b5ceedfeecf61bb9',
        'v0.0.23^{}': 'c81055a43f1691af59707076d78405b6d3235fea',
        'v0.0.24': '463103b31c473c25e87288f564a8e73a9476777b',
        'v0.0.24^{}': 'd33eab687ba73b586239843dd8c3bc4267f1b358',
        'v0.0.25': '79d7db0650cffe24e307dd4ba881ccbdf0011e6a',
        'v0.0.25^{}': 'b2c43af335e94255839aae1f2b1a97995040f389',
        'v0.0.26': 'e611dd73aeeef5add4bda82a00f7e9af7d17d9dd',
        'v0.0.26^{}': 'fae8a72f545106b2816641f5452bf7f7e99ea2a8',
        'v0.0.27': 'a233f65a609c07bc6e31bfc0bc051d98c8cfe18e',
        'v0.0.28': '6398b5cb041d23de187f46c8888768d96b3cd01e',
        'v0.0.29': '24ca84f16a4bcbf8b252eb0c4250a6c818cf00d3',
        'v0.0.3': '3e6345233bb696737784f423ace943e0eaa2b30c',
        'v0.0.3^{}': 'b3ed1e3f15c9bcab23833dbb5ef6a8e2198ec4e2',
        'v0.0.30': 'c8ea7416948bdc19c1ca1b51b8897ed9201597dd',
        'v0.0.31': 'f754b0f027c72695cbfd37c990559bc61bf583b6',
        'v0.0.32': 'c2dcbda8dbe0fb614de6340b273e7bba9ab52a37',
        'v0.0.33': '8411968f6359c8ae7e85b5da7e417002477263ea',
        'v0.0.34': 'dc887a60db904f58b558857ba7a6c39dd1d18f22',
        'v0.0.35': 'dd242320e5b0054c9468e4ab5cc3c4722051dd43',
        'v0.0.36': 'bc31c33f9b9dbaf6a2c15c118f9f8924600c6331',
        'v0.0.37': 'e723960dde1fa6dd1379642c80d09d2a1e5e2d16',
        'v0.0.38': 'e97c6ed41ae435991f2c4c1faaa0e72ad7b35c67',
        'v0.0.4': '01509d00409c556c331bb278269c6ca770eb7c52',
        'v0.0.4^{}': '3eb8f48d22cac58d8ba42237cb2227ef90bfce08',
        'v0.0.5': 'ff03e74259efab829557d0b3c15d6c76b9458262',
        'v0.0.6': '20668e724eed5fffd23968793aee0592babac2ab',
        'v0.0.6^{}': '641859e5e6bad88afab83a4a3e94903ed1d8e10b',
        'v0.0.7': '6dedfbd21a0633055a93c05cc8b4b5cd89f2b708',
        'v0.0.8': '4606f7652aba2b7e8d7c70eb0aa6cd75226f4d83',
        'v0.0.8^{}': '025860fcfb6af84739a924ff49bcbda036855b1a',
        'v0.0.9': '6e90dfd7573404a225888071ecaa572882b4e45c',
        'v0.0.9^{}': 'af4d84a6a9fa7a74acdad07fddf9f17ff3a974ae',
        'v0.1.0': 'dba5b92408549e55c36e16c89e2b4a4e4cbc8c8f',
        'v0.10.0': '0e1bc77ec39cd43459516f5599e2d05be1579f9c',
        'v0.10.1': 'd66ec5299c2380df023b47a98df4534a44a6bfb2',
        'v0.10.2': '945af5a5b3f271f2873d6e7a900742ecf079a6e9',
        'v0.11.0': '61692a3bfd239779f17028c66ef95fb14aa3240d',
        'v0.11.1': 'b5b29e4b51cb1fb52e9911154b418d1731653e84',
        'v0.11.2': '0d38b377b99d52c5a423d050929828e6effc09e7',
        'v0.11.3': '16a8f737ea412875ed328b866a4a306c5e34bb5c',
        'v0.12.0': '424e5be5bbca33062650c9bfb180a0d158e48c2a',
        'v0.12.1': 'f43dd8cd2d59a8443fc57e022d3e1125b66a05c3',
        'v0.12.2': '1e02b9938eed6d5f5c530869f0f7ae63fcd6a24a',
        'v0.12.3': '77563acd92e9b9c5ffec7e989466dc80c2a25189',
        'v0.13.0': '7367a3d790ed21779e8b69892a71c6f712cba5f0',
        'v0.13.1': '5eae20470da65e4c0fc6e838cffd7f1f9a9ab809',
        'v0.13.2': '76e088db64c91a5df7f63b29cc8c5ab5f1439d06',
        'v0.14.0': 'ec081303f8a3036203023844094055b3bb3ed641',
        'v0.14.1': '25802d78cadb2b3c2b1bae196378a6f1922ccea0',
        'v0.14.2': 'fa0101cddace7ab320c752fd720f9671e1085865',
        'v0.14.3': '1977e0b560be33361157045f21e554cd0a1e6b8c',
        'v0.15.0': 'c62fc7ce316b13c4a8960118de0e45ba82d74e77',
        'v0.16.0': '8b527e8d7c5e2f0ff115d2bb68bc9d5935e4ace0',
        'v0.17.0': '0f233b1d0be92420737d0d9d620b997ddb84b1a8',
        'v0.17.1': 'f5a60baa0406b22a4efb486e2a9169e315a1ee62',
        'v0.17.2': '7a179ce6057357966fad1482aae249051e1210af',
        'v0.17.3': '5cd1a95b9285c391d286bc648b932e052a07d63a',
        'v0.18.0': '450c4085f0f87a2794a9f250e90b01c290ad761b',
        'v0.18.1': '10a6cff12c2befde875780e50c34928f0eed8c01',
        'v0.18.2': '1a3fc40babec5e04c64ac9f9517e533194ddbe49',
        'v0.18.3': '84b2915dec28406a42edd6a03c39cd54c6e3ff48',
        'v0.18.4': 'e033edb073fef7b5be97a4a491d9b50753af3b72',
        'v0.18.5': '693ae12f73edf4979d0213ccc90e514e7c26e527',
        'v0.19.0': '67f0c3fd63d6c056d858233e188896079083b1b4',
        'v0.19.1': '991419d47002e01e3131c5a6cb2e55234ec39c97',
        'v0.19.10': 'c95b010aa64fe8fe0d858c7fd74f00ec9c29ae02',
        'v0.19.11': 'd0d315de82ae6fbdf9dd0ba53465d6c494eb1e78',
        'v0.19.2': '3fa797fadef6e2260bd40430486d0d5a7571e812',
        'v0.19.3': '6619604b14296ba3383f4be33749040dd1cb5204',
        'v0.19.4': '2d41f0595c0092b1097677b9a9240eee74d6ff89',
        'v0.19.5': 'f5d671b2b2807b6107ff9319dc070132fa9771a3',
        'v0.19.6': 'e1fae7c04e41b791da3800fee1be2aa5cac63163',
        'v0.19.7': 'f6c107ce41be23a391d9575eea7409512e1c25ed',
        'v0.19.8': '78ed60fe1c5d3cb997f0e8940f59543d561932d3',
        'v0.19.9': 'bde90ef9e48b485fa88796584eb7953aec9c1158',
        'v0.2.0': 'ead78cc511ca6d350f284d73c13d766d9f41cfeb',
        'v0.2.1': '408df195780cbae3b120a9a2571c2df18eec27eb',
        'v0.20.0': '9fa17e64c0b7845ac37193cba611551078728d90',
        'v0.21.0': '7bbed5ea5595dfae30962cdc3bab52d394b41949',
        'v0.21.1': '3e866cd00647388d5c6035d7604004b2228de4d6',
        'v0.22.0': '85f71adaea7a55a08c503f394af8446e1061085a',
        'v0.22.1': '472eeb2008b0295b5df5407cccea1be44e3e3be3',
        'v0.22.2': 'aa23a856ea477b22ed335ff946e4ce28a52cad67',
        'v0.22.3': '9abd710f45fa5f5cfb37f4ab309a8fe839f3a0c0',
        'v0.23.0': '74d348bbddcf634e69dd4f2f69e8c80c7c8a5796',
        'v0.24.0': 'fd2ab28899d48c149942fd0f4c81773ac0aebcbb',
        'v0.24.1': 'e4bc97898468a95bbdeee1b93ac5a7c23af0c68f',
        'v0.24.2': 'd2c7cf7acf77563ed873eae54c65fe5c3ce454df',
        'v0.24.3': '321756b9292687b9ef277e76b797d93fc19ba757',
        'v0.24.4': 'd84d9f5d070f7286f5961a8f1cb383269444faa4',
        'v0.25.0': 'fa0816849b3eaf697b561bf07e4887be2c85bd42',
        'v0.26.0': 'b25e86034cd1bc10bdd984e843d9bd44fb85cc57',
        'v0.27.0': '068032e2da6abafd0e8f586c0fe36dc37ecbfbdd',
        'v0.28.0': '30b57cdad9cf58d2930d419edd436e9e7624a1a9',
        'v0.28.1': '8abee395af2b37744262057abd002d63fe5471eb',
        'v0.28.2': '221daa4d85fdb2d5de790a6d3d85afa22954e260',
        'v0.28.3': '8cdd19a6d2ca147a4be173e38e18ad52290aec46',
        'v0.29.0': '465c3fe95439ce9a5b462c1042a89a3caddf37fc',
        'v0.3.0': 'ed74a9b58a6972e80add8d0760f55d5fc06894d6',
        'v0.30.0': '80b7d103dc528fc002f5b916a0b055a8e1992797',
        'v0.31.0': '6c55a28afac3d6b2ada7607cbdc200e4f9e3a652',
        'v0.31.1': '4c7aa0ef6022180b7ba299b6b3c65611c7a82d04',
        'v0.32.0': '1ba46a804519aca7d8b3ca4b4fe43f5f14d418e4',
        'v0.33.0': '0414d2a286d7bbc7a4a326a61c1f9f888a8ab87f',
        'v0.33.1': 'a7f8a142797bc04c79b575571fcefda1d438ca9c',
        'v0.34.0': 'f86525e2736e087f5f7d11dc2991477692d6b1fc',
        'v0.34.1': 'd795bd39990e03a2172eb4b00367ce933d2215ad',
        'v0.34.2': '911b7c3bcd95f786177bc74bf642489eaedb2e6b',
        'v0.34.3': '8b1e78dea93ca6072f626d7d92d0f60df034a2bd',
        'v0.35.0': 'ff2c608f1210a78298f11b2c749f4fc9d759f981',
        'v0.35.1': 'fbbd3a677a275f38f24c4b11613bc4532e596d15',
        'v0.35.2': '9bf94de9d5e88b0fc90929dd4bd20601eef15d25',
        'v0.35.3': 'a6b5ced38e53cf954d7da6da4bfab90dcdd1d032',
        'v0.35.4': 'fb3771739e5dd5fca5cfbc8f316e54ec5060fdb5',
        'v0.35.5': '93c8398eaae1d184424a8b184a77ce86cd4e9438',
        'v0.35.6': 'c6c3f156e85bedaf1709d26ad8003eabb84de8fb',
        'v0.35.7': '741013320582a6c80a70b23d691ae621df2e6c1a',
        'v0.36.0': '3d93be16e8a3b932ec615853394472cc5148f2be',
        'v0.36.1': '2b9769babf38a7b18d25b079da32738be7ff5275',
        'v0.37.0': '2a3f909761170632a394411c700ffed039127c51',
        'v0.37.1': 'efe67f5cbcdefaf583ad102481431b403d428dba',
        'v0.37.2': '0412cc741edefe4490f01fdf55f27fab0b4d76ee',
        'v0.37.3': '383737baa2f2be8f736930bf1d746b753094a894',
        'v0.37.4': '0e7f9da65656a557028419b8c0906f5e0abe78b9',
        'v0.38.0': '5e8aa3b818814f9c2a4dc9934bc508751b30cf2f',
        'v0.38.1': '40e2dd5aa17960ea5709b7bbb8f82635bbd7a573',
        'v0.38.2': '94490606d0c03e2660ebe730344da1afc16d350d',
        'v0.39.0': '8dfd2561adfa8e7656f26615aabb55bd817e6818',
        'v0.39.1': '868d5adc055ce9e41007a78d19a1a7adb93efa4d',
        'v0.39.2': 'f372778950ddf3742279e5e55255b1095ba877c9',
        'v0.39.3': 'ee3cf630c1b35fc6d7802b90f470e445a80e75a5',
        'v0.39.4': '0793e271f0231df74410949214537936646a9b3e',
        'v0.4.0': 'd436262a2a0ef3bc44909ea87b135f1970fd75c4',
        'v0.40.0': '8d1677c1fe4bd2f6cc2196ed1c2783069efe2ae9',
        'v0.40.1': 'eb3514b6a19b48e3559e77d6b025040e5d2a810c',
        'v0.40.2': '72ebd895609b030b7f8be62ec87f1c929894b6c6',
        'v0.40.3': '70d0883bec2d19725446e01e650ea289716e3a49',
        'v0.40.4': '5d074e052d5c701d04223514ce0068ad755639c1',
        'v0.41.0': '951035ce2f8a3a19db28e285f8053328d9c31d39',
        'v0.42.0': '3b339ec7681a7ff5802e0012e2b2695bb92eb2d9',
        'v0.43.0': 'c60049046599123488b2e691eab263a5cc674eb2',
        'v0.43.1': 'b2c45fc1121ef1efa0570b5872632e23637a5f26',
        'v0.43.2': '50d8bbeaeacbcc86db4ef304e7f7d4d3e979f0a0',
        'v0.44.0': '953c6953b8852f80daf3c559741db0e39e2b3397',
        'v0.44.1': '148fef31d74823cd360b3eb206d5db48e39db6b5',
        'v0.44.2': 'f44ad41afb57563e9e93a6343a6957798d474a8e',
        'v0.45.0': '35869cdc5d77c0ea6ee6bbd4614ca90dbc1cce74',
        'v0.45.1': 'dd1889a03bcd8120dd81061fd6b4e80fba19ebb2',
        'v0.45.2': '3f419f84b7e31edd69288763ae9baaae233d31ee',
        'v0.46.0': 'dde57aa7149bb0cf82c92c002fe9fd7c16a84470',
        'v0.46.1': 'cee718b33e601424a33d505f5aae694fcf2e3927',
        'v0.46.2': 'dc47ac6747517fce68a729557f965b64382c047d',
        'v0.46.3': '0baeb5d2fa8e827f8b3461ec03cf41f386e1bb38',
        'v0.46.4': 'b40f39245e78425a6a70db065b1cbd7005f17eff',
        'v0.47.0': '53f2e909030adb1c6ae855b14f3a2474ca93ce71',
        'v0.48.0': 'ec146bdbf5c73fa8e8dc48a8a8dbb00e35eb323f',
        'v0.49.0': '0df9e98f0dec327bac23603e322e8276072c2bbe',
        'v0.5.0': '1969c1687c97e2cb170102d18c9c8edf78d54783',
        'v0.5.1': '00b801bb6616cebdf7dc076023bf2377b2d068b1',
        'v0.50.0': '4e22cc31dc947578ddc305119ed54a36252e4c95',
        'v0.50.1': '80ac1519e3e931eb4b7977cf2dcd6f1d6f09b69c',
        'v0.51.0': '885db9cf0ddd5fc98878d25bad74f4a84af70d77',
        'v0.51.1': 'd81affcbc64b5ca43cca629bcae1cfe840ee55ff',
        'v0.51.10': 'cbd411178dab51c6984879a45bbf8c86b48224ce',
        'v0.51.11': '5a99593dd8159a7def2eb4517e0379e196b0f94b',
        'v0.51.12': '3b8453421de546970226ffb7ab0ecf2c8228c2b9',
        'v0.51.13': '9aa9c2aca7fc6086e0ced9fa886442beba7bcf79',
        'v0.51.2': '02c44b3dece6132e8a3f788b2217df7f6f530dd4',
        'v0.51.3': '96b2a303994c7eadbcf6f71496581840a3dd23d6',
        'v0.51.4': '7f14b0c9e02d0780bf74a1d929390fdb4c7c47bf',
        'v0.51.5': 'a87d85d8ae3df32e1713ef39c284b1d88d85ee95',
        'v0.51.6': '1e78ef2553ddf14fe1a4cf5949b369aa256f1bf4',
        'v0.51.7': '4c0dd2075d1a08ffd991f65596da5282b6898bb1',
        'v0.51.8': '89be615e60186cfd11548f653077ca82abb0f584',
        'v0.51.9': 'ce43a6622b94e36ef766e7f5295301465357e651',
        'v0.52.0': 'ae230ae6127dd04685d64c1d15023e5e8a2d0fb3',
        'v0.52.1': 'c47d116b73f28a62f64f3aa162e7855ba3bdd100',
        'v0.53.0': 'ccc9303002573face76aa1de1bb78c3560221417',
        'v0.54.0': '5d57904afaa94fc46a93ae2f9f5ea8a7ac6011c3',
        'v0.54.1': '9f5dfabb589d2899001b011797aceee374fbc81d',
        'v0.54.2': 'fc29aba74ea55c798abb0274e0a032c6af90cb58',
        'v0.55.0': '4f0ca49ae7037575fd2fc64c45e5e375651b60ea',
        'v0.55.1': '9dff89249a3be7f39c0d2a8cc3a3eccc2d9415b7',
        'v0.55.2': 'a5a87dae7500b64df1dae1270b3651fccd7ba52d',
        'v0.55.3': 'ca4e4ea24f00d5e98cd6c951d4e63c03dd90624f',
        'v0.55.4': 'f3b4ddb34ec1ffd06af3eb42cd106aeb42758827',
        'v0.55.5': '311bd0bd244b071b71aa919ba0ff44824c621e6e',
        'v0.55.6': 'c8d2a3a965cfab8c9ca30ee86f7e7360cf114d95',
        'v0.56.0': '620072af225b13624ee437d91bfab8b566b9558c',
        'v0.57.0': '81f13e0d6ed187bc9f902e2325445b0222b4495a',
        'v0.57.1': 'b391a1e421fd2e30f39e9f7b798eaa2d71350821',
        'v0.58.0': '94b11fd72ab0233d8e15bbd06260a53bbd49ddbc',
        'v0.58.1': 'b2e242d389b6323351aa33141ccdf94f8f9a9d61',
        'v0.58.2': '173f13813aa8774b002f3858a72ecb6a05cd8852',
        'v0.59.0': '2e6198df39279b3804ef6be7e3801b8a230557db',
        'v0.6.0': 'e0df47b3d96529f2df5c1fec9ab30f490393643e',
        'v0.6.1': '195ebf097f6e1657e043bfe38f8362db6d72b9a6',
        'v0.60.0': 'bf716ec6fa9f53dd5a10b22621f5263f55e77617',
        'v0.60.1': '4ff08d84a11b9eff87cd8f83e33cbda7e44477b3',
        'v0.60.2': '0e369cbc163b3f43f5b465cf66acd739128e8776',
        'v0.61.0': '30d67513d3dc602d885bcdd257f2c652fda3f30f',
        'v0.62.0': '4a8216a9db01c63e2653db314876d7da9c5528a7',
        'v0.63.0': '87b841cfbd28c6a8393d3f8e01b7a225103fed52',
        'v0.64.0': '216c7649c717b20433092774560543b85229aed9',
        'v0.64.1': '251ebaf910d49d57c31982f12ceafa050c1683a0',
        'v0.64.2': '29ffacebdaa8a11c627db40d16dccc277ab3fc8a',
        'v0.64.3': '6b6c0e152e1f3a9b8e4e889d24177f0d147d4ddd',
        'v0.64.4': '5d8316536d5d24912631720c8e5aa47430d80d53',
        'v0.64.5': '6518bf12ddf66e3987c2a7c7720637f230bc3e92',
        'v0.64.6': 'e85d4aa06f50775062f7b48954a1559edf261df1',
        'v0.65.0': '022fe8f0516a0819fc49f58e8dc4032fce808399',
        'v0.65.1': 'a7eafeea6ef8db7bce6a18d8a99ef9587dad4125',
        'v0.66.0': '5f497913fa9b807b721fa47e119f27781d96602a',
        'v0.67.0': '29a0c9acceb561a250ba13a7245fc83888d4f224',
        'v0.67.1': '8793a2a7b4b00968a7bce8d74845d651c7962b1e',
        'v0.67.2': '0a8b78b719b675a9ecbd16c381ddc54ebbf34e39',
        'v0.67.3': 'b346682aeb64c5e350f6b39ac26ecdbf22876995',
        'v0.67.4': '8f2251e3d21a021d081225d17759f43c47f2ba38',
        'v0.67.5': '6d3238ab3aaa8bad61e7b76ee904c09a354b9dfd',
        'v0.68.0': 'bb40f053250e80da377561cc2f4ba59c20b26364',
        'v0.69.0': '8d8c3e6f34e4824338d9f055007c9052589a53a5',
        'v0.7.0': 'ba1f617d497da6500839c2d4c6b0d083bfc1f810',
        'v0.7.1': '2e3404b7c08b93068ed7a542c0185e07251d67e6',
        'v0.7.2': 'f671d3de67fe7e2b14de73c350742ddfe680f14b',
        'v0.70.0': '9de561588130b0145e3243616f74217ccb5aeaec',
        'v0.70.1': 'e30bbedf69f595861e383680f03efb50401d5d44',
        'v0.70.2': '30fddf7373ca33cee599e1cbc98f55144e3e0afa',
        'v0.70.3': 'd9aa842e2f942951f85b715e95e02215f011857c',
        'v0.70.4': '1aca3706037133c38ddb7f5711adc0a3736d210e',
        'v0.70.5': '67bad02c9ced22ff1c49f987216ed7454723d1f9',
        'v0.70.6': '5a07d2c34ffb05e3ea6ad44c41dc2fc4052a446c',
        'v0.70.7': '3f84b78143d04a540aa23b02d2f902d44445fd6e',
        'v0.70.8': '74a69053b5f46bf01e3315b748e30a6bf1cb0f7e',
        'v0.70.9': '495f2947c557b6873fa00131011e0358afc7c6a5',
        'v0.71.0': '661f74e891412202314b584be84b9abc70f8c9cf',
        'v0.72.0': 'adaeb288851883057cf207fa37500eaf09fb8792',
        'v0.72.1': 'ba6e44416214b40d115a033113d9ee390f061ded',
        'v0.73.0': '9a3abae5e9ef89453bfcc1a125bd5d5e42c5e99d',
        'v0.73.1': '3960eeb4469c87b3d575fe6839cdad667635f89e',
        'v0.73.2': 'eebb1156e1909b8a420f5680c3e45f9452b8cc0b',
        'v0.73.3': '5254d457cbe658362b3175595f953d890ed6f6df',
        'v0.74.0': '5010dac4111176d8145fd555160cf0d39a09a6ae',
        'v0.75.0': '92a7e8333e1c1565286bb09a178cb8a34e8054ce',
        'v0.75.1': '6e19496d0b5af9b665f3cb4dc06119f1901add4d',
        'v0.76.0': 'be810f449aa14df4fd76cdc3b90f61c17ef4db48',
        'v0.77.0': 'c4d0bfe6b8f8ac9aa063e2d492bbcef50f6722ac',
        'v0.77.1': '03e4c9f9e9c53a5f25500eb079ef8d63ac71854b',
        'v0.78.0': '2c980e06a87ec59a7febf206a4e3b41acc22c592',
        'v0.78.1': '32eee531484aaa9b09292c54d2dee1b9065019b5',
        'v0.78.2': '36288d4065feed4918752dd165d86e905b69aac4',
        'v0.78.3': '7ebc583e163749a3590da2c928cdcf459cd001c4',
        'v0.78.4': '97fb6b4fd1051ef65256f2c674befe31e891b822',
        'v0.78.5': '56137069fff62e52076aae0eb8015436aeef5361',
        'v0.8.0': 'cdfaa361f12e055c25fb7ca0cec1d506643870a8',
        'v0.8.1': 'c82c412ef205ea12acfb334221d21aaa9f448c1a',
        'v0.9.0': '53c9b24cd64d0ab41cba46594f10a2d8845a60c3',
        'v0.9.1': 'd760fa99ad4c8f9fe0e93ad7720ac0cdf9b27741',
        'v0.9.2': '489b384ad412e0444265dd5587c839b2c94c29bd',
        'v0.9.3': 'da285e2c0ea3527ac46fd9e6958d10c762588f7b',
        'v0.9.4': 'c93860538415697741e34e2a7f79b436c778e7f3',
        'v0.9.5': 'b80771ddb519cee319ef87688d5339428fe08ca9',
        'v0.9.6': '83c6d9a4f98fac61972cc67511d11d17c1926976',
        'v0.9.7': '5ce7f1c0fb13e969ada04ce99543ec29612aaefb',
        'v0.9.8': '01406f4615998231eabd9d2053279438205daa2c',
        'v0.9.9': 'b19e5ef569a7a598f41e12e1f7164ea515a0b761',
        'v1.0.0': '4e66704d05042624bbc78b85ee5110d5ee7ec3e2',
        'v1.0.0-beta.1': 'a3ad0084d554ea7141d486744cd7b77905227d75',
        'v1.0.0-beta.10': '7b04575a58ee99e15a0ecbaabacb8e13c7967c30',
        'v1.0.0-beta.11': 'a549b2bdd73d38531ae7796d3574f0b1fb591702',
        'v1.0.0-beta.12': '92fd6eaf80504139f17a7eb6ea3c2bddfe14606b',
        'v1.0.0-beta.13': 'a1ae219fe915dd060d2d40663a45196facd53167',
        'v1.0.0-beta.14': '8bb09e574f3e97e4e1fbd03229076825317eadf0',
        'v1.0.0-beta.15': '321618f580a91113a6e709463fbcc9aa5fedef64',
        'v1.0.0-beta.16': 'e2e7d4080fdc203775075458cb32753393172e1c',
        'v1.0.0-beta.17': '9f905d9d1bf1adf8772c6e56fa0da9ed98f26296',
        'v1.0.0-beta.18': '8aaa232ea1d880fae69fcc9b48510ca5a079d120',
        'v1.0.0-beta.19': '47abb7a39620a1d726b0b86166fa7307d45af367',
        'v1.0.0-beta.1@beta': 'ccba5204bfe29f6472c767cf38236404cdd4ee52',
        'v1.0.0-beta.1@beta^{}': 'a3ad0084d554ea7141d486744cd7b77905227d75',
        'v1.0.0-beta.2': 'b9e5db455fb26a0f0fbbcc7137cf22096ce11904',
        'v1.0.0-beta.20': '443c13f063a45cfb34f54cdce7a991d175d0663b',
        'v1.0.0-beta.21': '08ce40e5eff4b19e68e2f783f1571d86f4e4f7e4',
        'v1.0.0-beta.22': '064e62486284225b6448c599280d125d82bfc970',
        'v1.0.0-beta.23': '9cd7f3db5ef1b97b9beeaf5d035ed8c162dd4dd8',
        'v1.0.0-beta.24': '59e5b128f755d9904c8d0eb1d95329c3b1d6522c',
        'v1.0.0-beta.25': '32b64ca6d7c18fe714c62f7a313c0bb2b1fd683c',
        'v1.0.0-beta.26': 'e7d08429ed2a4b095df2f66cd67c0e358311a9d9',
        'v1.0.0-beta.27': 'e3445780692193148d89fe3adba48f15ccf4fba8',
        'v1.0.0-beta.28': 'ccb526cdc818405d95f53c0fab6b27e858da2eff',
        'v1.0.0-beta.29': '7b05b3df39c06453fe1274fa6d8f69658f58b910',
        'v1.0.0-beta.2@beta': '0664f9b015cd5e52f775e0f164a0169e2b262ee6',
        'v1.0.0-beta.2@beta^{}': 'b9e5db455fb26a0f0fbbcc7137cf22096ce11904',
        'v1.0.0-beta.3': '0d6b6e001c56460f9363f6a94b49ed3ce8c938c6',
        'v1.0.0-beta.30': '429fde1776582561a8057125f4fe3f25cff8a970',
        'v1.0.0-beta.31': 'f51e48996da8ed0668056eba1bdbe2b83c7f243b',
        'v1.0.0-beta.32': '8e53088a69f4fcff59da1a214a01fa0ebe4e5846',
        'v1.0.0-beta.33': 'ec1dce07c00fe8df75e49e5ec212c7bb70beb83e',
        'v1.0.0-beta.34': 'df3b16ba0f5539aef0a93e8bb35d90f29475829b',
        'v1.0.0-beta.35': '424255bb1212538b0f9c4a79224629f66e8c4d9d',
        'v1.0.0-beta.36': '4a6a1c2a2c72e06bdf9c66d930ddbb17a5cb8f0c',
        'v1.0.0-beta.3@beta': '43fbd2455b56c15ec475a53af983d62bff24bfc2',
        'v1.0.0-beta.3@beta^{}': '0d6b6e001c56460f9363f6a94b49ed3ce8c938c6',
        'v1.0.0-beta.4': '8f4a4c8371df8802a740f73cd370906e82236d58',
        'v1.0.0-beta.5': 'db611be4ef293fc5ecfbee908adcae59ebb2692c',
        'v1.0.0-beta.6': '1d9c09742c27867d62d95d9ad3d92d63a539cb1b',
        'v1.0.0-beta.7': 'ef595b9b254ac3a50f177fd30eb3f05e79598a05',
        'v1.0.0-beta.8': 'fe6d98a548fd09539bed3906ee1da316b5798a8b',
        'v1.0.0-beta.9': '2ae9b780369f68ba7403770458b7f8ecad6ca82c',
        'v1.1.0': 'c0d7adfdcf887070abddefbd2ed336b40df03d15',
        'v1.1.1': 'fdfdabe3ba731ec065c75f613bd07bb57a45da9e',
        'v1.1.2': 'b0b7b57d21db79ba38518cf84e9e8981b1ea8b7a',
        'v1.1.3': '7a7276aa76e7fe665de76a1d60324407dd9dc38b',
        'v1.1.4': '37533c1bfbf3db389ddb2af25c8379bbb84c7cf1',
        'v1.1.5': 'c8e1ac27a7c5f937f3931025d6d061708ca97f00',
        'v1.1.6': '0c1ec5ad967c4a6d7c42357ce022f1c8d6467099',
        'v1.2.0': 'fe30525b0e380c32fb68c6dfd1b59dd379162ed2',
        'v1.3.0': '0f4f03c8479437cc4cb97f552e1ddbdd8afe9d0f',
        'v1.3.1': '6564ea58587e8ca894d7bca207b9089eb602f468',
        'v1.3.2': 'c2cd5cb8c4f69163de535e026f9e6e09cef29dc6',
        'v1.4.0': '9d3f0dede5e4384b418b0bf1252c0d1fd0f50c65',
        'v1.4.1': '7864c33b6aeb0eeb695788c1ee4577f802147f2b',
        'v1.4.2': 'b782d224a301101bfd18b8d4c3d8a3e97d4bf73c',
        'v1.4.3': '47b89c0480b976c51fb041486460f77b8df52e50',
        'v1.4.4': '8020f2b7a470c28fbd3413d2cb4a6a27ee3306fa',
        'v1.5.0': '5e6cea2a61f6d92a3bc81e4b16862926fee5c764',
        'v1.6.0': 'b03f2614a0b57b01cf049f72bb85723d5768c9f9',
        'v1.7.0': '585c4f58cee627091d4cd44c14edcfd5abe8e805',
        'v1.7.1': '1035d933507633a8b5d8b0cf5a3b40339680431a',
        'v1.7.2': 'fb407a092ef869b680d31719bfe872c6e454b518',
        'v1.7.3': '55f2ade6fb738e512a404fe05e437295016d2a24',
        'v1.7.4': '02045f68e90b9066cb883412b93917755a3b6239',
        'v1.7.5': 'f19ea0f6737d1decb36a22314039b9f7346c9270',
        'v1.7.6': 'e66a6c2f8ee7a6630eeaeb0665a68c4eb4f2bb0f',
        'v1.7.7': '629b4e1b4dc4d56fbd2b9e00c0995562a0e0c167',
        'v1.7.8': 'f2e38053733f4c8ca4b7784d5c2a56addcf36bf4',
        'v1.8.0': '26f761e540709da7920db1288469cb9ed5be5c1c',
        'v1.8.1': '89c0da78d5ebf3c9f2754b3c8d557155dd70c8d7',
        'v1.8.2': '1316820b5665346414f9bd1287d4701f9cf77727' } } }
```

## Web worker

```>js gitworker.js
/* eslint-env worker */
/* globals LightningFS git MagicPortal GitHttp */
importScripts(
  "https://unpkg.com/@isomorphic-git/lightning-fs",
  "https://unpkg.com/isomorphic-git@beta",
  "https://unpkg.com/isomorphic-git@beta/http/web/index.umd.js",
  "https://unpkg.com/magic-portal"
);

let fs = new LightningFS("fs", { wipe: true });
const portal = new MagicPortal(self);
self.addEventListener("message", ({ data }) => console.log(data));

(async () => {
  let mainThread = await portal.get("mainThread");
  let dir = "/";
  portal.set("workerThread", {
    setDir: async _dir => {
      dir = _dir;
    },
    clone: async args => {
      fs = new LightningFS("fs", { wipe: true });
      try{
      return git.clone({
        ...args,
        fs,
        http: GitHttp,
        dir,
        onProgress(evt) {
          mainThread.progress(evt);
        },
        onMessage(msg) {
          mainThread.print(msg);
        },
        onAuth(url) {
          console.log(url);
          return mainThread.fill(url);
        },
        onAuthFailure({ url, auth }) {
          return mainThread.rejected({ url, auth });
        }
      });
      } catch(err) {
        mainThread.failure({message}=err)
      }
    },
    listBranches: args => git.listBranches({ ...args, fs, dir }),
    listFiles: args => git.listFiles({ ...args, fs, dir }),
    log: args => git.log({ ...args, fs, dir })
  });
})();
```

```html #reference !collapse
<div>
  <input
    id="repository"
    type="text"
    style="width: 50em"
    title="Tip: enter a private repo URL to see the credentialManager plugin prompt for a password.",
    value="https://github.com/isomorphic-git/isomorphic-git",
  />
  <button type="button" id="cloneButton">Clone</button>
</div>
<div>
  <progress id="progress" value="0"></progress>
  <span id="progress-txt" style="font-family: monospace;"></span>
</div>
<output id="log" style="white-space: pre; font-family: monospace;"></output>

<script src="https://unpkg.com/magic-portal"></script>
<script>
  // alert("Running")
  const $ = id => document.getElementById(id);

  let worker = new Worker("gitworker.js");
  const portal = new MagicPortal(worker);
  worker.addEventListener("message", ({ data }) => console.log(data));

  const mainThread = {
    async print(message) {
      let text = $("log").textContent;
      if (message.endsWith("\r")) {
        // overwrite last line
        text = text.trim().replace(/.+$/, "");
      }
      text += message + "\n";
      $("log").textContent = text;
    },
    async progress(evt) {
      $("progress-txt").textContent = evt.phase;
      $("progress").value = evt.total ? evt.loaded / evt.total : 0.5;
      return;
    },
    async fill(url) {
      let username = window.prompt("Username:");
      let password = window.prompt("Password:");
      return { username, password };
    },
    async rejected({ url, auth }) {
      window.alert("Authentication rejected");
      return;
    }
  };
  portal.set("mainThread", mainThread, {
    void: ["print", "progress", "rejected"]
  });

```

```>script https://unpkg.com/magic-portal !below
https://unpkg.com/magic-portal
```

```js
return new Promise((resolve,reject) => {
  let myWorker;
  try {
    myWorker = new Worker('gitworker.js')
    myWorker.onmessage = (ev) => {
      if (ev.data === 'done') resolve(ev.data)
      else console.log(ev.data)
    }
    myWorker.onerror = (err) => {
      resolve({msg: "worker.onerror: " + err.message + " (" + err.filename + ":" + err.lineno + ")", err, err},)
    }
  } catch(err) {
    resolve({msg: "Caught err", err})
  }
  
})
```


```js
  // alert("Running")
  const $ = id => document.getElementById(id);

  let worker = new Worker("gitworker.js");
  const portal = new MagicPortal(worker);
  worker.addEventListener("message", ({ data }) => console.log(data));

  const mainThread = {
    async print(message) {
      console.log(message)
    },
    async progress(evt) {
      console.log(evt.phase, evt.total ? evt.loaded / evt.total : 0.5)
      return;
    },
    async fill(url) {
      let username = window.prompt("Username:");
      let password = window.prompt("Password:");
      return { username, password };
    },
    async rejected({ url, auth }) {
      window.alert("Authentication rejected");
      return;
    }, 
    async failure({message}) {
      alert("Failure: ", message)
      return
    },
  }
  portal.set("mainThread", mainThread, {
    void: ["print", "progress", "rejected", "failure"]
  });

async function doCloneAndStuff() {
    console.log("CLONE");

    await workerThread.setDir("/testing");

    await workerThread.clone({
      corsProxy: "https://cors.isomorphic-git.org",
      url: "https://GitHub.com/dotlitdev/dotlit"
    });
    console.log("CLONED!!")

    let branches = await workerThread.listBranches({ remote: "origin" });
    console.log("BRANCHES:\n" + branches.map(b => `  ${b}`).join("\n"))

    let files = await workerThread.listFiles({});
    console.log("FILES:\n" + files.map(b => `  ${b}`).join("\n"))

    let commits = await workerThread.log({});
    console.log("LOG:\n" +
      commits
        .map(c => `  ${c.oid.slice(0, 7)}: ${c.commit.message}`)
        .join("\n"))
  }

  return (async () => {
    const workerThread = await portal.get("workerThread");
    window.workerThread = workerThread
    window.worker = worker
    console.log(workerThread)

    console.log("ready")
    await doCloneAndStuff()

    
  })();
```
```>txt attached=true updated=1621342790497
true
```

```js
return workerThread.log({})
```
```>txt attached=true updated=1621343998003
{ setDir: [Function],
  clone: [Function],
  listBranches: [Function],
  listFiles: [Function],
  log: [Function] }
```





