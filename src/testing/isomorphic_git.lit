# Isomorphic Git

Since `.lit` already uses [[testing/LightningFS]] for the local filesystem we can easily use https://isomorphic-git.org/docs/en/quickstart to manage versioning...

```js
console.log(lit.location)
return typeof lit.git
```
```>txt attached=true updated=1619352756655
{ src: 'testing/isomorphic_git.lit',
  root: '/',
  base: 'https://dotlit.org/',
  query: { file: 'testing/isomorphic_git.lit' } }
object
```
```js
return (async () => {
  return await lit.git.init({
    fs: lit.lfs, 
    dir: lit.location.root
  })
})()
```
```>txt attached=true updated=1619352764059
undefined
```
```js
return (async () => {
  return lit.location.src + " : " + await lit.git.status({
    fs: lit.lfs, 
    dir: lit.location.root, 
    filepath: lit.location.src 
  })
})()
```
```>txt attached=true updated=1619352769657
testing/isomorphic_git.lit : *added
```
```js
return (async () => {
  return await lit.git.statusMatrix({
    fs: lit.lfs, 
    dir: lit.location.root, 
  })
})()
```
```>txt attached=true updated=1619353583396
[ [ '404.lit', 0, 2, 0 ],
  [ 'cli/cli.lit', 0, 2, 0 ],
  [ 'client/style.styl', 0, 2, 0 ],
  [ 'client/styles/cell', 0, 2, 0 ],
  [ 'client/styles/cell.styl', 0, 2, 0 ],
  [ 'client/styles/cellmenu.styl', 0, 2, 0 ],
  [ 'client/styles/codecell.styl', 0, 2, 0 ],
  [ 'client/styles/viewers.styl', 0, 2, 0 ],
  [ 'data.csv', 0, 2, 0 ],
  [ 'dumm/example.js', 0, 2, 0 ],
  [ 'dummy/data.csv', 0, 2, 0 ],
  [ 'dummy/example.js', 0, 2, 0 ],
  [ 'dummy/example.svg', 0, 2, 0 ],
  [ 'dummy/plain.txt', 0, 2, 0 ],
  [ 'example.js', 0, 2, 0 ],
  [ 'example.svg', 0, 2, 0 ],
  [ 'execute_code_cells.lit', 0, 2, 0 ],
  [ 'files_and_links.lit', 0, 2, 0 ],
  [ 'functions.lit', 0, 2, 0 ],
  [ 'github_workflows.lit', 0, 2, 0 ],
  [ 'https:/example.com', 0, 2, 0 ],
  [ 'images/example.svg', 0, 2, 0 ],
  [ 'index.lit', 0, 2, 0 ],
  [ 'parser/parser.lit', 0, 2, 0 ],
  [ 'persist_to_github.lit', 0, 2, 0 ],
  [ 'renderer/renderer.lit', 0, 2, 0 ],
  [ 'scratch_pad.lit', 0, 2, 0 ],
  [ 'scratch_⚠️_pad_🔬.html', 0, 2, 0 ],
  [ 'scratch_⚠️_pad_🔬.lit', 0, 2, 0 ],
  [ 'styling_and_themes.lit', 0, 2, 0 ],
  [ 'testing/isomorphic_git.lit', 0, 2, 0 ],
  [ 'testing/lightningfs.lit', 0, 2, 0 ],
  [ 'unist-util-position-to-node.lit', 0, 2, 0 ],
  [ 'utils/functions.js', 0, 2, 0 ] ]
```
```js
return (async () => {
  return lit.location.src + " : " + await lit.git.status({
    fs: lit.lfs, 
    dir: lit.location.root, 
    filepath: lit.location.src 
  })
})()
```
```>txt attached=true updated=1619304998668
testing/isomorphic_git.lit : *added
```


```js
return (async ()=> {
let sha = await lit.git.commit({
  fs: lit.lfs,
  dir: lit.location.root,
  message: 'Commit!!!',
  author: {
    name: 'Mr. Test',
    email: 'mrtest@example.com'
  }
})

console.log(sha)

})()
```
```>txt attached=true updated=1619304235264
26a1551feb2af962bde2beac1d7a6d86fe10f138
undefined
```

```js
return (async ()=> {
  let commits = await lit.git.log({
     fs: lit.lfs, 
     dir: lit.location.root, 
     depth: 1
  })
  console.log(commits[0])
})()
```
```>txt attached=true updated=1619304488781
{ oid: '26a1551feb2af962bde2beac1d7a6d86fe10f138',
  commit: 
   { message: 'Commit!!!\n',
     parent: [],
     tree: '4b825dc642cb6eb9a060e54bf8d69288fbee4904',
     author: 
      { name: 'Mr. Test',
        email: 'mrtest@example.com',
        timestamp: 1619304232,
        timezoneOffset: -60 },
     committer: 
      { name: 'Mr. Test',
        email: 'mrtest@example.com',
        timestamp: 1619304232,
        timezoneOffset: -60 } },
  payload: 'tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904\nauthor Mr. Test <mrtest@example.com> 1619304232 +0100\ncommitter Mr. Test <mrtest@example.com> 1619304232 +0100\n\nCommit!!!\n' }
undefined
```