# Links
```js babel=true
const {wikiLinkOptions, linkToUrl, decorateLinkNode} = lit.parser.utils

const resolve = wikiLinkOptions().pageResolver

console.info(resolve.toString())
console.info(linkToUrl.toString())

const root = '/'
const example = 'testing/Links?foo=bar#baz'
const resolved = resolve(example)
const link = {
  type: 'wikiLink',
  data: {permalink: resolved},
  url: example,
}
const url = linkToUrl(link, root)

return {example, resolved, link, url}


```
```>txt attached=true updated=1621979812368 !error
function pageResolver(name) {
      return [name.replace(/[^\w\s/-]+/g, '').trim().replace(/\s+/g, '_').toLowerCase()];
    }
function linkToUrl(link, root) {
  if (link.type === 'wikiLink') {
    var _link$data$permalink$ = link.data.permalink.split("#"),
        _link$data$permalink$2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__.default)(_link$data$permalink$, 2),
        base = _link$data$permalink$2[0],
        frag = _link$data$permalink$2[1];

    return "".concat(root).concat(base, ".lit").concat(frag ? '#' + frag : '');
  } else {
    return link.url;
  }
}
function toString() {
    [native code]
}
linkToUrl@https://dotlit.org/web.bundle.js:135305:58
untitled.js:20:22
untitled.js:27:63
module code@untitled.js:27:139
evaluate@[native code]
moduleEvaluation@[native code]
```



