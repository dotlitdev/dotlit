# momento

A vanilla bare bones polyfil for moment.js

```js #example
return lit.utils.momento 
```
```>txt attached=true updated=1620855162958
{ inspect: 
   { [Function: inspect]
     colors: 
      { bold: [Object],
        italic: [Object],
        underline: [Object],
        inverse: [Object],
        white: [Object],
        grey: [Object],
        black: [Object],
        blue: [Object],
        cyan: [Object],
        green: [Object],
        magenta: [Object],
        red: [Object],
        yellow: [Object] },
     styles: 
      { special: 'cyan',
        number: 'yellow',
        boolean: 'yellow',
        undefined: 'grey',
        null: 'bold',
        string: 'green',
        date: 'magenta',
        regexp: 'red' } },
  diff: 
   { Diff: [Getter],
     diffChars: [Getter],
     diffWords: [Getter],
     diffWordsWithSpace: [Getter],
     diffLines: [Getter],
     diffTrimmedLines: [Getter],
     diffSentences: [Getter],
     diffCss: [Getter],
     diffJson: [Getter],
     canonicalize: [Getter],
     diffArrays: [Getter],
     applyPatch: [Getter],
     applyPatches: [Getter],
     parsePatch: [Getter],
     merge: [Getter],
     structuredPatch: [Getter],
     createTwoFilesPatch: [Getter],
     createPatch: [Getter],
     convertChangesToDMP: [Getter],
     convertChangesToXML: [Getter] },
  React: 
   { Fragment: {},
     StrictMode: {},
     Profiler: {},
     Suspense: {},
     Children: 
      { map: [Function: mapChildren],
        forEach: [Function: forEachChildren],
        count: [Function: countChildren],
        toArray: [Function: toArray],
        only: [Function: onlyChild] },
     Component: [Function: Component],
     PureComponent: [Function: PureComponent],
     __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: 
      { ReactCurrentDispatcher: [Object],
        ReactCurrentBatchConfig: [Object],
        ReactCurrentOwner: [Object],
        IsSomeRendererActing: [Object],
        assign: [Function: assign],
        ReactDebugCurrentFrame: [Object] },
     cloneElement: [Function: cloneElementWithValidation],
     createContext: [Function: createContext],
     createElement: [Function: createElementWithValidation],
     createFactory: [Function: createFactoryWithValidation],
     createRef: [Function: createRef],
     forwardRef: [Function: forwardRef],
     isValidElement: [Function: isValidElement],
     lazy: [Function: lazy],
     memo: [Function: memo],
     useCallback: [Function: useCallback],
     useContext: [Function: useContext],
     useDebugValue: [Function: useDebugValue],
     useEffect: [Function: useEffect],
     useImperativeHandle: [Function: useImperativeHandle],
     useLayoutEffect: [Function: useLayoutEffect],
     useMemo: [Function: useMemo],
     useReducer: [Function: useReducer],
     useRef: [Function: useRef],
     useState: [Function: useState],
     version: '17.0.1' },
  unist: 
   { select: 
      { matches: [Function: matches],
        selectAll: [Function: selectAll],
        select: [Function: select] },
     source: [Function: source],
     filter: [Function: filter],
     visit: { [Function: visit] CONTINUE: true, SKIP: 'skip', EXIT: false },
     patchSource: { default: [Getter] },
     selectPosition: { atPos: [Getter], selectAll: [Getter] } },
  mdast: { to_string: [Function: to_string] },
  fns: 
   { NoOp: [Getter],
     Identity: [Getter],
     AsInt: [Getter],
     Undef: [Getter],
     getMeta: [Getter],
     posstr: [Getter],
     wait: [Getter],
     template: [Getter] },
  path: 
   { resolve: [Function: resolve],
     normalize: [Function: normalize],
     isAbsolute: [Function: isAbsolute],
     join: [Function: join],
     relative: [Function: relative],
     _makeLong: [Function: _makeLong],
     dirname: [Function: dirname],
     basename: [Function: basename],
     extname: [Function: extname],
     format: [Function: format],
     parse: [Function: parse],
     sep: '/',
     delimiter: ':',
     win32: null,
     posix: [Circular] },
  querystring: 
   { parse: [Function],
     decode: [Function],
     stringify: [Function],
     encode: [Function] },
  vfile: [Function: VFile],
  delete: [Function: _delete],
  read: [Function: read] }
```

## Source

```js !collapse < momento.js
```