















# [[ðŸ”¬ testing]] IPFS

```>html !below
<script src="https://cdn.jsdelivr.net/npm/ipfs/dist/index.min.js"></script>
```



```js #setup #init
return (async fn=>{
  const node = await Ipfs.create()
  window.IpfsNode = node
  return await node.swarm
})()

```

```js
return IpfsNode.idenity()
```
```>txt attached=true updated=1664717394911 !error
function toString() {
    [native code]
}
@untitled.js:2:40
@untitled.js:4:63
module code@untitled.js:4:159
evaluate@[native code]
moduleEvaluation@[native code]
```

```js > txt !collapse #peers
return IpfsNode.swarm.peers()
```
```>txt !collapse #peers attached=true updated=1664717326993
[ { addr: <Multiaddr 36156e6f6465312e7072656c6f61642e697066732e696f0601bbde03a503221220c9ab4abc592cae0b1d076c557ce9bc2a9ff5d40a726a683e36fe274afa9122a5 - /dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 36156e6f6465332e7072656c6f61642e697066732e696f0601bbde03a5032212209129199e0951d4c3f59b8062d384489b8d16cee2b759929ba6802b2418eebc17 - /dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 3717616d362e626f6f7473747261702e6c69627032702e696f0601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /dns6/am6.bootstrap.libp2p.io/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 36156e6f6465322e7072656c6f61642e697066732e696f0601bbde03a50322122064af9b5cee9d39d7f5c78860802832721130faf3aaf6c73d8c72ac30278432f1 - /dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 37176e79352e626f6f7473747261702e6c69627032702e696f0601bbde03a5032212201b9ea49f92cf930bc24ac1183e78ed1358a1e29dc69031269c1fd7d53ff65fd1 - /dns6/ny5.bootstrap.libp2p.io/tcp/443/wss/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 36156e6f6465302e7072656c6f61642e697066732e696f0601bbde03a503221220a3c61c2e0dfef02fa28f6345a87c7c17101c7cec88a128433ae621cfa8fb7e35 - /dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 3718737631362e626f6f7473747261702e6c69627032702e696f0601bbde03a503221220a6dd073989ac54aa6e65a5b6a3da2363026ebe15618844a06263244f95fd0eb9 - /dns6/sv16.bootstrap.libp2p.io/tcp/443/wss/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 3618737631352e626f6f7473747261702e6c69627032702e696f0601bbde03a50322122006b3608aa000274049eb28ad8e793a26ff6fab281a7d3bd77cd18eb745dfaabb - /dns4/sv15.bootstrap.libp2p.io/tcp/443/wss/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } },
  { addr: <Multiaddr 36177367312e626f6f7473747261702e6c69627032702e696f0601bbde03a503221220d35893e482b48d830c653415e615061281982226059d8fcb65add178cbb990bf - /dns4/sg1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt>,
    peer: 
     { type: 'RSA',
       multihash: [Object],
       privateKey: undefined,
       publicKey: undefined } } ]
```



```js
return IpfsNode.add("dotlit!").then(res=>res.path)
```
```>txt attached=true updated=1664717031208
QmeYcD38KNnj7u1qHF1fGtiZusSdLbqyMuc21hweWTwRms
```



```js
return (async fn => {

  const data = await IpfsNode.cat("QmeYcD38KNnj7u1qHF1fGtiZusSdLbqyMuc21hweWTwRms")
  return new TextDecoder().decode(data)

})()
```
```>txt attached=true updated=1664716473045
{}
```























