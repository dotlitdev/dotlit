# testing/runkit.lit

Experimenting using RunKit as a custom repl for nodejs. 

## Embed

Lets start with just the demo embed, https://runkit.com/docs/embed adding embed script below

```script https://embed.runkit.com !inline
// inject https://embed.runkit.com
```

```html !inline
<!-- anywhere else on your page -->
<div id="my-element">A container to hold the embed. <br/>Run #init cell below ðŸ‘‡ to populate it.</div>
```



```js #init !collapse
return RunKit.createNotebook({
    // the parent element for the new notebook
    element: document.getElementById("my-element"),
    onEvaluate: (...args) => alert(JSON.stringify([...args])),
    // specify the source of the notebook
    source: "// GeoJSON!\nvar getJSON = require(\"async-get-json\");\n\nawait getJSON(\"https://storage.googleapis.com/maps-devrel/google.json\");"
})
```
```>txt attached=true updated=1620996024770
{ onEvaluate: [Function: onEvaluate],
  onLoad: undefined,
  onResize: undefined,
  onSave: undefined,
  onURLChanged: undefined,
  UUID: 1,
  name: 'runkit-embed-1',
  URL: null,
  endpointURL: null }
```

react bindings for simple embed: https://github.com/runkitdev/react-runkit and trying out https://runkit.com/docs/endpoint


```jsx babel=true react=true repl=js #react #endpoint 
return (async fn => {

  const React = lit.utils.React
  const Embed = (await import('https://cdn.skypack.dev/runkit-embed-react')).default

  const helloSource = `exports.endpoint = function(request, response) {
    response.end("Hello world!");
}`

  const onLoad = (...args) => alert(JSON.stringify([...args]))

  return <Embed
            mode='endpoint'
            readOnly={true}
            evaluateOnLoad={true}
            // hidesActionButton={true}
            source={ helloSource } 
            // ref='embed'
            onEvaluate={ onLoad } 
          />

})()
```

```uri !below
https://w47epqwosf4n.runkit.sh/
```