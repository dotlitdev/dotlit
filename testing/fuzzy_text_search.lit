# Fuzzy text search

Related

- [[testing/compact_manifest]]

## Fuse.js

https://fusejs.io/

```js !collapse #intro
return (async (fn) => {
  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());
  const fuse = new Fuse(manifest.nodes, {
    includeScore: true,
    keys: ["title", "id"],
  });

  // 3. Now search!
  return fuse.search("../../..",{limit:5});
})();

```
```js > md
return (async (fn) => {
  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  // const manifest = await fetch("/manifest.json").then((res) => res.json());

  const fullLocal = await (async (fn) => {
    const path = lit.utils.path;
    const all = []
    const visit = async (root) => {
      const list = await lit.fs.readdir(root);
      return Promise.all(
        list.map(async (key) => {
          const pathname = path.join(root, key);
          const stat = await lit.fs.stat(pathname);
          let contents;
          if (key === ".git") {
          } else if (false && stat.type === "dir") await visit(pathname);
          else if (false && pathname.endsWith('.lit')) contents = (await lit.fs.readFile(pathname, { encoding: "utf8",localOnly: true }))//.slice(0,10);
          const item = { pathname, type: stat.type, contents }
          all.push(item);
          return item
        })
      );
    };

    await visit("/")
    return all
  })();

  return fullLocal

  const fuse = new Fuse(fullLocal, {
    //ignoreLocation: true,
    includeScore: true,
    //includeMatches: true,
    keys: ["pathname", "contents"],
  });


  // 3. Now search!
  return fuse.search("agora", { limit: 5 })
        //.map(x=>x.matches.map(x=>x.indices))
        .map(x=>[x.score, x.item.pathname,x.refIndex])
        .map(([score,pathname,index]) => `- [${pathname}](${pathname}) ${score}`)
        .join('\n');
})();

```
```>md attached=true updated=1621812827450
30
```




## FuzzySet

https://github.com/Glench/fuzzyset.js

```js
return import('https://cdn.skypack.dev/fuzzyset').then( FuzzySet => {

  const f = new FuzzySet.default()
  f.add("the text of mine")
  f.add("the text of someone else")
  f.add("other texts")
  return f.get("text of")
})

```
```>txt attached=true updated=1621778112764
[ [ 0.4375, 'the text of mine' ] ]
```