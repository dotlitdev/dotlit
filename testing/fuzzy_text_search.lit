# Fuzzy text search

Related

- [[testing/compact_manifest]]

## Fuse.js

https://fusejs.io/

```js !collapse #intro
return (async (fn) => {
  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());
  const fuse = new Fuse(manifest.nodes, {
    includeScore: true,
    keys: ["title", "id"],
  });

  // 3. Now search!
  return fuse.search("../../..",{limit:5});
})();

```
```js > md
return (async (fn) => {
  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());

  const fullLocal = await (async (fn) => {
    const path = lit.utils.path;
    const all = []
    const visit = async (root) => {
      const list = await lit.fs.readdir(root);
      return Promise.all(
        list.map(async (key) => {
          const pathname = path.join(root, key);
          const stat = await lit.fs.stat(pathname);
          let contents;
          if (key === ".git") {
            return { pathname, type: stat.type };
          } else if (stat.type === "dir") await visit(pathname);
          else contents = (await lit.fs.readFile(pathname, { encoding: "utf8",localOnly: true }))//.slice(0,10);
          const item = { pathname, type: stat.type, contents }
          all.push(item);
          return item
        })
      );
    };

    await visit("/")
    return all
  })();


  const fuse = new Fuse(fullLocal, {
    ignoreLocation: true,
    includeScore: true,
    includeMatches: true,
    keys: ["pathname", "contents"],
  });


  // 3. Now search!
  return fuse.search("Git", { limit: 15 })
        //.map(x=>x.matches.map(x=>x.indices))
        .map(x=>[x.score, x.item.pathname,x.refIndex])
        .map(([score,pathname,index]) => `- [${pathname}](${pathname}) ${score}`)
        .join('\n');
})();

```
```>md attached=true updated=1621811384237
- [/articles/ideas_for.lit](/articles/ideas_for.lit) 0.2114225226254923
- [/dummy/data.csv](/dummy/data.csv) 0.36
- [/testing/fuzzy_text_search.lit](/testing/fuzzy_text_search.lit) 0.36995700111688923
- [/throwaway/codevaluebug.lit](/throwaway/codevaluebug.lit) 0.4871211210686611
- [/meta/github_workflows.lit](/meta/github_workflows.lit) 0.5105603040774547
- [/renderer/transcludeCode.js](/renderer/transcludeCode.js) 0.5601518178694253
- [/utils/colors.js](/utils/colors.js) 0.5622086325239564
- [/testing/autoformatting_cell_source.lit](/testing/autoformatting_cell_source.lit) 0.5642729995712286
- [/testing/autoformatting_cell_source.lit#prettier](/testing/autoformatting_cell_source.lit#prettier) 0.5642729995712286
- [/plugins/transformers/prettier.js](/plugins/transformers/prettier.js) 0.566057426954563
- [/testing/log/today.js](/testing/log/today.js) 0.5689563913593156
- [/parser/parser.lit](/parser/parser.lit) 0.5704114362714293
- [/parser/links.js](/parser/links.js) 0.5705116928943912
- [/parser/mdblocks.js](/parser/mdblocks.js) 0.5709944956178419
- [/parser/frontmatter.js](/parser/frontmatter.js) 0.5715781509519569
```




## FuzzySet

https://github.com/Glench/fuzzyset.js

```js
return import('https://cdn.skypack.dev/fuzzyset').then( FuzzySet => {

  const f = new FuzzySet.default()
  f.add("the text of mine")
  f.add("the text of someone else")
  f.add("other texts")
  return f.get("text of")
})

```
```>txt attached=true updated=1621778112764
[ [ 0.4375, 'the text of mine' ] ]
```