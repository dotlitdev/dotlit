# Fuzzy text search

Related

- [[testing/compact_manifest]]

## Fuse.js

https://fusejs.io/

```js !collapse #intro
return (async (fn) => {
  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());
  const fuse = new Fuse(manifest.nodes, {
    includeScore: true,
    keys: ["title", "id"],
  });

  // 3. Now search!
  return fuse.search("../../..",{limit:5});
})();

```
```js !plugin !collapse type=repl of=search
export const repl = async (src, meta) => {
  const t = Date.now();

  const { default: Fuse } = await import(
    "https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.esm.js"
  );
  const manifest = await fetch("/manifest.json").then((res) => res.json());

  const formatMatch = ({ indices, value }) => {
    return indices.map(([start, end]) => value.slice(start, end)).join(" ");
  };

  const formatMatches = (matches) => matches.map(formatMatch).join("...");

  const fullLocal = await (async (fn) => {
    const path = lit.utils.path;
    const all = [];
    const visit = async (root) => {
      const list = await lit.fs.readdir(root);
      return Promise.all(
        list.map(async (key) => {
          const pathname = path.join(root, key);
          const stat = await lit.fs.stat(pathname);
          let contents;
          if (key === ".git" || !key) {
          } else if (stat.type === "dir") await visit(pathname);
          else if (pathname.endsWith(".lit"))
            contents = await lit.fs.readFile(pathname, {
              encoding: "utf8",
              localOnly: true,
            }); //.slice(0,10);
          const item = { pathname, type: stat.type, contents };
          all.push(item);
          return item;
        })
      );
    };

    await visit("/");
    return all;
  })();

  // return fullLocal

  const fuse = new Fuse(fullLocal, {
    ignoreLocation: true,
    includeScore: true,
    includeMatches: true,
    ignoreFieldNorm: true,
    minMatchCharLength: 3,
    keys: ["pathname", "contents"],
  });

  // 3. Now search!
  const query = src.trim();
  const msg = `Results for search "**${query}**". In **${
    (Date.now() - t) / 1000
  }** seconds.\n\n`;

  return (
    msg +
    fuse
      .search(query, { limit: 10 })
      //.map(x=>x.matches.map(x=>x.indices))
      .map((x) => [x.score, x.item.pathname, x.refIndex, x.matches])
      .map(
        ([score, pathname, index, matches]) =>
          `1. [${pathname}](${pathname}) 
    
      > ${formatMatches(matches)}`
      )
      .join("\n")
  );
};

```

```text repl=search > md
noteworthy
```
```>md attached=true updated=1621890132302
Results for search "**agora**". In **0.062** seconds.

1. [/testing/lightningfs.lit](/testing/lightningfs.lit) 
   �
      > or or ro ro og ro ro og og og og ar ar ar ro ro ro ro ro ar ar rro rro rro rro rro rro gr ra agor rro ro ro rro ra rro ro ro ro ro ro ro ro
1. [/testing/fuzzy_text_search.lit](/testing/fuzzy_text_search.lit) 
   �
      > ro ro ro agor agor Ago ago ago Ago ago ago Ag or rr rr rr rr rr rr ago rr rr rr or or or Go rr rr Ar
1. [/articles/ideas_for.lit](/articles/ideas_for.lit) 
   �
      > Ga Agor
1. [/testing/log/2021-05-23.lit](/testing/log/2021-05-23.lit) 
   �
      > go go agor or agor or Agor gr gr go ag ra or Gr
1. [/index.lit](/index.lit) 
   �
      > or rogr rog gr rog ra
1. [/execute_code_cells.lit](/execute_code_cells.lit) 
   �
      > or rro ro or ra oArr oArr ar ar rro rro
1. [/persist_to_github.lit](/persist_to_github.lit) 
   �
      > ora ora ora
1. [/plugin_system.lit](/plugin_system.lit) 
   �
      > ar ar ar ar ar ar ar ar ar ar ar ga go
1. [/scratch_pad.lit](/scratch_pad.lit) 
   �
      > rogr ra ra ra ra oooo ag rro or Gr Gr Gr Gr gr ooooooooo
1. [/prismjs_and_a_simple_editor.lit](/prismjs_and_a_simple_editor.lit) 
   �
      > ra ro ra ra ro ra ro ra ra ro ra ro ra ra ro Arr ra oArr oArr
```
```>md updated=1621870142091
Results for search "**fuzz**". In **0.074** seconds.

1. [/testing/fuzzy_text_search.lit](/testing/fuzzy_text_search.lit) 0.000001
1. [/testing/log/2021-05-23.lit](/testing/log/2021-05-23.lit) 0.001
1. [/functions.lit](/functions.lit) 0.25
1. [/testing/input_buffer.lit](/testing/input_buffer.lit) 0.25
1. [/testing/full.json](/testing/full.json) 0.5
1. [/utils/functions.js](/utils/functions.js) 0.5
1. [/index.lit](/index.lit) 0.5
1. [/execute_code_cells.lit](/execute_code_cells.lit) 0.5
1. [/plugin_system.lit](/plugin_system.lit) 0.5
1. [/scratch_pad.lit](/scratch_pad.lit) 0.5
1. [/prismjs_and_a_simple_editor.lit](/prismjs_and_a_simple_editor.lit) 0.5
1. [/testing/lightningfs.lit](/testing/lightningfs.lit) 0.5
1. [/testing/isomorphic_git.lit](/testing/isomorphic_git.lit) 0.5
1. [/testing/runkit.lit](/testing/runkit.lit) 0.5
1. [/testing/selection.lit](/testing/selection.lit) 0.5
```





## FuzzySet

https://github.com/Glench/fuzzyset.js

```js
return import('https://cdn.skypack.dev/fuzzyset').then( FuzzySet => {

  const f = new FuzzySet.default()
  f.add("the text of mine")
  f.add("the text of someone else")
  f.add("other texts")
  return f.get("text of")
})

```
```>txt attached=true updated=1621778112764
[ [ 0.4375, 'the text of mine' ] ]
```