# CORS Proxy

Creating a CORS proxy server using [[testing/RunKit]]

```>js runkit-cors-proxy-endpoint.js !collapse #source
const util = require("util");

exports.endpoint = function (req, res) {
  res.writeHead(200, {
    "Content-Type": "application/json",
    "Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Methods": "*",
  });

  res.end("WIP");
};

```

```js
const express = require("@runkit/runkit/express-endpoint/1.0.0");
const request = require("request");

express(exports).use("*", function (req, res) {
  req
    .pipe(
      request({
        url: "http://rest.opensubtitles.org/search" + req.url,
        headers: {
          "User-Agent": "TemporaryUserAgent",
        },
      })
    )
    .pipe(res);
});

```
```>js ../plugins/other/cors-proxy.js !plugin type=proxy id=corsProxy !collapse
if (typeof lit !== "undefined" && !window.__runkitCORSProxyEnpoint) {
  (async (fn) => {
    const rkEmbed = document.createElement("script");
    rkEmbed.onload = async (fn) => {
      const el = document.createElement("div");
      document.body.appendChild(el);
      el.setAttribute("style", "height:0;");
      RunKit.createNotebook({
        element: el,
        mode: "endpoint",
        onLoad: async (rk) => {
          window.__runkitCORSProxyEnpoint = await rk.getEndpointURL();
          document.body.removeChild(el);
        },
        evaluateOnLoad: true,
        source: await lit.fs.readFile(
          "/testing/runkit-cors-proxy-endpoint.js",
          {
            encoding: "utf8",
          }
        ),
      });
    };
    rkEmbed.setAttribute("src", "https://embed.runkit.com");
    document.body.appendChild(rkEmbed);
  })();
}

export const proxy = async (src, meta, node) => {
  if (!window.__runkitCORSProxyEnpoint) {
    return "Still setting up proxy endpoint";
  } else {
    return window.__runkitCORSProxyEnpoint;
  }
};

```


```js
return lit.file.data.plugins.proxy.corsProxy()
```
```>txt attached=true updated=1622237986359
https://8zhefq0kfl6s.runkit.sh
```