# CORS Proxy

Creating a CORS proxy server using [[testing/RunKit]]

```>js runkit-cors-proxy-endpoint.js !collapse #source
const util = require("util");

exports.endpoint = function (req, res) {
  res.writeHead(200, {
    "Content-Type": "application/json",
    "Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Methods": "*",
  });

  res.end("WIP");
};

```

```>js runkit-express-cors-proxy.js #source
const express = require("@runkit/runkit/express-endpoint/1.0.0");
const cors = require("cors");

const app = express(exports);
app.use(cors());
app.use("*", (req, res) => {
  res.end("WIP");
});

```
```>js ../plugins/other/cors-proxy.js !plugin type=proxy id=corsProxy !collapse
if (typeof lit !== "undefined" && !window.__runkitCORSProxyEnpoint) {
  (async (fn) => {
    const rkEmbed = document.createElement("script");
    rkEmbed.onload = async (fn) => {
      const el = document.createElement("div");
      document.body.appendChild(el);
      el.setAttribute("style", "height:0;");
      RunKit.createNotebook({
        element: el,
        mode: "endpoint",
        onLoad: async (rk) => {
          window.__runkitCORSProxyEnpoint = await rk.getEndpointURL();
          document.body.removeChild(el);
        },
        evaluateOnLoad: true,
        source: await lit.fs.readFile("/testing/runkit-express-cors-proxy.js", {
          encoding: "utf8",
        }),
      });
    };
    rkEmbed.setAttribute("src", "https://embed.runkit.com");
    document.body.appendChild(rkEmbed);
  })();
}

export const proxy = async (src, meta, node) => {
  if (!window.__runkitCORSProxyEnpoint) {
    return "Still setting up proxy endpoint";
  } else {
    return window.__runkitCORSProxyEnpoint;
  }
};

```


```js #test
return (async (fn) => {
  const endpoint = await lit.file.data.plugins.proxy.corsProxy();
  console.log(endpoint);
  const resp = await fetch(endpoint);
  console.log(resp.status)
  return resp.text();
})();

```
```>txt attached=true updated=1622239317714
https://3i4xlk21u03u.runkit.sh
WIP
```
