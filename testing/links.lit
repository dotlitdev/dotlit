# Links

Links in `.lit` are broken down into two main types **Regular** and [[wiki-links]].
mich of the complexity is a result of the second type.

Regular links should for the most part behave as expected, with the recommendation being that you should link to the source for other `.lit`/Mardown documents and the resultant `html` should convert to `.html` extention automatically
```js babel=true
const { wikiLinkOptions, linkToUrl, decorateLinkNode } = lit.parser.utils;

const resolve = wikiLinkOptions().pageResolver;

// console.info(resolve.toString())
// console.info(linkToUrl.toString())

const root = "/";
const type = "wikiLink";
const example = "My cool ðŸ˜Ž link";
const resolved = resolve(example);
const link = {
  type,
  data: { permalink: resolved[0] },
  url: example,
  value: example,
};

const url = linkToUrl(link, root);

console.log({ root, example, resolved, link , url});

const decorated = decorateLinkNode(link);
return JSON.stringify(decorated, null, 2);

```
```>txt attached=true updated=1621980961613
{ root: '/',
  example: 'My cool ðŸ˜Ž link',
  resolved: [ 'my_cool_link' ],
  link: 
   { type: 'wikiLink',
     data: { permalink: 'my_cool_link' },
     url: 'My cool ðŸ˜Ž link',
     value: 'My cool ðŸ˜Ž link' },
  url: '/my_cool_link.lit' }
{
  "type": "link",
  "data": {
    "isExternal": false,
    "isAbsolute": false,
    "isFragment": false,
    "isRelative": true,
    "canonical": "my_cool_link.lit",
    "wikilink": true,
    "hProperties": {
      "wikilink": true,
      "data": {
        "base": "my_cool_link.html",
        "isExternal": false,
        "isAbsolute": false,
        "isFragment": false,
        "isRelative": true,
        "canonical": "my_cool_link.lit",
        "wikilink": true
      }
    }
  },
  "url": "my_cool_link.html?file=my_cool_link.lit",
  "title": "My cool ðŸ˜Ž link",
  "children": [
    {
      "type": "text",
      "value": "My cool ðŸ˜Ž link"
    }
  ]
}
```
```>txt  updated=1621980516788
{ root: '/',
  example: 'testing/Links?foo=bar#baz',
  resolved: [ 'testing/linksfoobarbaz' ],
  link: 
   { type: 'wikiLink',
     data: { permalink: 'testing/linksfoobarbaz' },
     url: 'testing/Links?foo=bar#baz',
     value: 'testing/Links?foo=bar#baz' } }
{
  "type": "link",
  "data": {
    "isExternal": false,
    "isAbsolute": false,
    "isFragment": false,
    "isRelative": true,
    "canonical": "testing/linksfoobarbaz.lit",
    "wikilink": true,
    "hProperties": {
      "wikilink": true,
      "data": {
        "base": "testing/linksfoobarbaz.html",
        "isExternal": false,
        "isAbsolute": false,
        "isFragment": false,
        "isRelative": true,
        "canonical": "testing/linksfoobarbaz.lit",
        "wikilink": true
      }
    }
  },
  "url": "testing/linksfoobarbaz.html?file=testing/linksfoobarbaz.lit",
  "title": "testing/Links?foo=bar#baz",
  "children": [
    {
      "type": "text",
      "value": "testing/Links?foo=bar#baz"
    }
  ]
}
```



