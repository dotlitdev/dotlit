# Input Buffer




## Table of Contents
## About

## To Do

- [x] On load check for url query string `input`.
  - [x] If `input` is available, decode markdown.
  - [ ] Check document for section corresponding to current date, if available append `input` other wise create with `input`.

## Implementation


```js !collapse exec=onload > md !info
const checkForInput = () => {
  const insp = lit.utils.inspect
  const qs = lit.utils.querystring

  const search = location.search
  const query = search
              && qs.parse(search.slice(1))

  if (query?.input) {
    const input = query.input
    delete query.input
    const qsWoInput = qs.stringify(query)
    window.history.replaceState(null,null,'?' + qsWoInput)
    return `***Captured Input:***

${input}`
    } else {
      return "*No input detected.*"
  }
}
return checkForInput()
```
```>md !warn attached=true updated=1620508210977
Checking for input...
```

```js !collapse > md #mockinput
const qs = location.search.slice(1)
return `[Mock Input](?${qs + (qs ? '&' : '')}input=${encodeURIComponent("- [ ] some **Input**")})`
```
```>md #mockinput attached=true updated=1620508006145
[Mock Input](?file=testing/input_buffer.lit&input=-%20%5B%20%5D%20some%20**Input**)
```

```js exec=onload !collapse > md
const today = (new Date()).toISOString().split("T")[0]

const checkForTodayFile = async () => {
  return "### Today is " + today
}

return checkForTodayFile()
```

### Bookmarklet

```js !plugin type=viewer of=bookmarklet
export const viewer = ({node, React}) => {
  const rc = React.createElement
  const meta = node.properties.meta
  return rc('span', null, ['Bookmarklet: ', rc('a', {href: `javascript:(function(){${node.data.value}})()`}, `Run ${meta && meta.id ? meta.id: "bookmarklet"}` )])
}
```

```js !below viewer=bookmarklet id=Input
alert("Success!")
```

















