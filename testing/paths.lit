# testing/paths.lit

Related [[testing/Links]]

```js
return lit.location
```
```>txt attached=true updated=1622294414551
{ src: '/testing/paths.lit',
  root: '/',
  base: 'https://dotlit.org/',
  query: {} }
```

```js #exploring
const {join, dirname, relative, resolve, normalize} = lit.utils.path
const {src,base,root} = lit.location

const full = join(base, root, src)

const ghConfig = {
  prefix: '..'
}
// for a regular GitHub pages repo root 
// will be calculated as the a sub path 
// of the domain root
const ghRoot = '/pages-repo'
const gh = join(ghRoot, ghConfig.prefix, src)


// resolving links relative to file and root

const test = {
  src: '/my/nested/file.lit',
  root: '/not-at-root',
  link: '../another/file.lit',
}

const link = join(test.root, dirname(test.src), test.link)
const linkCanonical = resolve(dirname(test.src), test.link)

return {full, gh, link, linkCanonical}
```
```>txt attached=true updated=1622294763837
{ full: 'https:/dotlit.org/testing/paths.lit',
  gh: '/testing/paths.lit',
  link: '/not-at-root/my/another/file.lit',
  linkCanonical: '/my/another/file.lit' }
```

```js #utils
// link and path utils
const srcToGH = (src, prefix) => join(prefix, src);

const linkToSrc = (loc, link) => resolve(dirname(loc), link);

return { srcToGH, linkToSrc };

```
```>txt attached=true updated=1622295187455
{ srcToGH: [Function: srcToGH],
  linkToSrc: [Function: linkToSrc] }
```